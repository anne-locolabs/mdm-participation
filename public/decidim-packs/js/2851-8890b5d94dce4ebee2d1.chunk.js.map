{"version":3,"file":"js/2851-8890b5d94dce4ebee2d1.chunk.js","mappings":"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","sources":["webpack://decidim-development-app/./node_modules/codemirror/addon/edit/matchbrackets.js","webpack://decidim-development-app/./node_modules/codemirror/addon/search/searchcursor.js","webpack://decidim-development-app/./node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"names":["mod","CodeMirror","ie_lt8","Pos","matching","bracketRegex","config","findMatchingBracket","cm","where","line","pos","afterCursor","re","match","dir","style","found","scanForBracket","maxScanLen","maxScanLines","stack","lineEnd","lineNo","end","ch","matchBrackets","autoclear","maxHighlightLen","highlightNonMatching","marks","ranges","i","clear","doMatchBrackets","clearHighlighted","val","old","oldConfig","regexpFlags","regexp","flags","ensureFlags","current","target","maybeMultiline","searchRegexpForward","doc","start","last","string","searchRegexpForwardMultiline","chunk","curLine","before","inside","startLine","startCh","lastMatchIn","endMargin","from","newMatch","searchRegexpBackward","first","searchRegexpBackwardMultiline","chunkSize","doFold","noFold","str","adjustPos","orig","folded","foldFunc","min","max","mid","len","searchStringForward","query","caseFold","fold","lines","search","cutFrom","endString","lastLine","searchStringBackward","top","topString","SearchCursor","options","reverse","head","result","newText","origin","cur","cmds","findPosSubword","state","type","startPos","e","next","cat","moveSubword","range","info","visibleBottomLine","visibleTopLine","lineRanges","to","extended","insertLine","above","newSelection","at","wordAt","fullWord","word","text","isSelectedRange","prevAnchor","prevHead","sel","addCursorToSelection","newRanges","newAnchor","newHead","newRange","mirror","selectBetweenBrackets","opening","closing","puncType","prev","linesToMove","newSels","joined","offset","obj","anchor","actual","rangeCount","sortLines","caseSensitive","direction","toSort","selected","a","b","au","bu","j","k","modifyWordOrSelection","indices","replacements","cursors","indentUnit","cursor","toStartOfLine","column","deletePos","prevIndent","tmp","getTarget","findAndGoTo","forward","matches","primaryIndex","keyMap","mac"],"sourceRoot":""}