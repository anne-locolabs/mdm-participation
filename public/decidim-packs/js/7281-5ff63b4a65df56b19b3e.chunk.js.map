{"version":3,"file":"js/7281-5ff63b4a65df56b19b3e.chunk.js","mappings":"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","sources":["webpack://decidim-development-app/./node_modules/codemirror-graphql/esm/utils/jsonParse.js","webpack://decidim-development-app/./node_modules/codemirror-graphql/esm/variables/lint.js"],"sourcesContent":["export default function jsonParse(str) {\n    string = str;\n    strLen = str.length;\n    start = end = lastEnd = -1;\n    ch();\n    lex();\n    const ast = parseObj();\n    expect('EOF');\n    return ast;\n}\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n    const nodeStart = start;\n    const members = [];\n    expect('{');\n    if (!skip('}')) {\n        do {\n            members.push(parseMember());\n        } while (skip(','));\n        expect('}');\n    }\n    return {\n        kind: 'Object',\n        start: nodeStart,\n        end: lastEnd,\n        members,\n    };\n}\nfunction parseMember() {\n    const nodeStart = start;\n    const key = kind === 'String' ? curToken() : null;\n    expect('String');\n    expect(':');\n    const value = parseVal();\n    return {\n        kind: 'Member',\n        start: nodeStart,\n        end: lastEnd,\n        key,\n        value,\n    };\n}\nfunction parseArr() {\n    const nodeStart = start;\n    const values = [];\n    expect('[');\n    if (!skip(']')) {\n        do {\n            values.push(parseVal());\n        } while (skip(','));\n        expect(']');\n    }\n    return {\n        kind: 'Array',\n        start: nodeStart,\n        end: lastEnd,\n        values,\n    };\n}\nfunction parseVal() {\n    switch (kind) {\n        case '[':\n            return parseArr();\n        case '{':\n            return parseObj();\n        case 'String':\n        case 'Number':\n        case 'Boolean':\n        case 'Null':\n            const token = curToken();\n            lex();\n            return token;\n    }\n    expect('Value');\n}\nfunction curToken() {\n    return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\nfunction expect(str) {\n    if (kind === str) {\n        lex();\n        return;\n    }\n    let found;\n    if (kind === 'EOF') {\n        found = '[end of file]';\n    }\n    else if (end - start > 1) {\n        found = '`' + string.slice(start, end) + '`';\n    }\n    else {\n        const match = string.slice(start).match(/^.+?\\b/);\n        found = '`' + (match ? match[0] : string[start]) + '`';\n    }\n    throw syntaxError(`Expected ${str} but found ${found}.`);\n}\nexport class JSONSyntaxError extends Error {\n    constructor(message, position) {\n        super(message);\n        this.position = position;\n    }\n}\nfunction syntaxError(message) {\n    return new JSONSyntaxError(message, { start, end });\n}\nfunction skip(k) {\n    if (kind === k) {\n        lex();\n        return true;\n    }\n}\nfunction ch() {\n    if (end < strLen) {\n        end++;\n        code = end === strLen ? 0 : string.charCodeAt(end);\n    }\n    return code;\n}\nfunction lex() {\n    lastEnd = end;\n    while (code === 9 || code === 10 || code === 13 || code === 32) {\n        ch();\n    }\n    if (code === 0) {\n        kind = 'EOF';\n        return;\n    }\n    start = end;\n    switch (code) {\n        case 34:\n            kind = 'String';\n            return readString();\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            kind = 'Number';\n            return readNumber();\n        case 102:\n            if (string.slice(start, start + 5) !== 'false') {\n                break;\n            }\n            end += 4;\n            ch();\n            kind = 'Boolean';\n            return;\n        case 110:\n            if (string.slice(start, start + 4) !== 'null') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Null';\n            return;\n        case 116:\n            if (string.slice(start, start + 4) !== 'true') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Boolean';\n            return;\n    }\n    kind = string[start];\n    ch();\n}\nfunction readString() {\n    ch();\n    while (code !== 34 && code > 31) {\n        if (code === 92) {\n            code = ch();\n            switch (code) {\n                case 34:\n                case 47:\n                case 92:\n                case 98:\n                case 102:\n                case 110:\n                case 114:\n                case 116:\n                    ch();\n                    break;\n                case 117:\n                    ch();\n                    readHex();\n                    readHex();\n                    readHex();\n                    readHex();\n                    break;\n                default:\n                    throw syntaxError('Bad character escape sequence.');\n            }\n        }\n        else if (end === strLen) {\n            throw syntaxError('Unterminated string.');\n        }\n        else {\n            ch();\n        }\n    }\n    if (code === 34) {\n        ch();\n        return;\n    }\n    throw syntaxError('Unterminated string.');\n}\nfunction readHex() {\n    if ((code >= 48 && code <= 57) ||\n        (code >= 65 && code <= 70) ||\n        (code >= 97 && code <= 102)) {\n        return ch();\n    }\n    throw syntaxError('Expected hexadecimal digit.');\n}\nfunction readNumber() {\n    if (code === 45) {\n        ch();\n    }\n    if (code === 48) {\n        ch();\n    }\n    else {\n        readDigits();\n    }\n    if (code === 46) {\n        ch();\n        readDigits();\n    }\n    if (code === 69 || code === 101) {\n        code = ch();\n        if (code === 43 || code === 45) {\n            ch();\n        }\n        readDigits();\n    }\n}\nfunction readDigits() {\n    if (code < 48 || code > 57) {\n        throw syntaxError('Expected decimal digit.');\n    }\n    do {\n        ch();\n    } while (code >= 48 && code <= 57);\n}\n//# sourceMappingURL=jsonParse.js.map","import CodeMirror from 'codemirror';\nimport { GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, GraphQLScalarType, } from 'graphql';\nimport jsonParse, { JSONSyntaxError, } from '../utils/jsonParse';\nCodeMirror.registerHelper('lint', 'graphql-variables', (text, options, editor) => {\n    if (!text) {\n        return [];\n    }\n    let ast;\n    try {\n        ast = jsonParse(text);\n    }\n    catch (error) {\n        if (error instanceof JSONSyntaxError) {\n            return [lintError(editor, error.position, error.message)];\n        }\n        throw error;\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return [];\n    }\n    return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n    var _a;\n    const errors = [];\n    for (const member of variablesAST.members) {\n        if (member) {\n            const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n            const type = variableToType[variableName];\n            if (type) {\n                for (const [node, message] of validateValue(type, member.value)) {\n                    errors.push(lintError(editor, node, message));\n                }\n            }\n            else {\n                errors.push(lintError(editor, member.key, `Variable \"$${variableName}\" does not appear in any GraphQL query.`));\n            }\n        }\n    }\n    return errors;\n}\nfunction validateValue(type, valueAST) {\n    if (!type || !valueAST) {\n        return [];\n    }\n    if (type instanceof GraphQLNonNull) {\n        if (valueAST.kind === 'Null') {\n            return [[valueAST, `Type \"${type}\" is non-nullable and cannot be null.`]];\n        }\n        return validateValue(type.ofType, valueAST);\n    }\n    if (valueAST.kind === 'Null') {\n        return [];\n    }\n    if (type instanceof GraphQLList) {\n        const itemType = type.ofType;\n        if (valueAST.kind === 'Array') {\n            const values = valueAST.values || [];\n            return mapCat(values, item => validateValue(itemType, item));\n        }\n        return validateValue(itemType, valueAST);\n    }\n    if (type instanceof GraphQLInputObjectType) {\n        if (valueAST.kind !== 'Object') {\n            return [[valueAST, `Type \"${type}\" must be an Object.`]];\n        }\n        const providedFields = Object.create(null);\n        const fieldErrors = mapCat(valueAST.members, member => {\n            var _a;\n            const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n            providedFields[fieldName] = true;\n            const inputField = type.getFields()[fieldName];\n            if (!inputField) {\n                return [\n                    [\n                        member.key,\n                        `Type \"${type}\" does not have a field \"${fieldName}\".`,\n                    ],\n                ];\n            }\n            const fieldType = inputField ? inputField.type : undefined;\n            return validateValue(fieldType, member.value);\n        });\n        for (const fieldName of Object.keys(type.getFields())) {\n            const field = type.getFields()[fieldName];\n            if (!providedFields[fieldName] &&\n                field.type instanceof GraphQLNonNull &&\n                !field.defaultValue) {\n                fieldErrors.push([\n                    valueAST,\n                    `Object of type \"${type}\" is missing required field \"${fieldName}\".`,\n                ]);\n            }\n        }\n        return fieldErrors;\n    }\n    if ((type.name === 'Boolean' && valueAST.kind !== 'Boolean') ||\n        (type.name === 'String' && valueAST.kind !== 'String') ||\n        (type.name === 'ID' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'String') ||\n        (type.name === 'Float' && valueAST.kind !== 'Number') ||\n        (type.name === 'Int' &&\n            (valueAST.kind !== 'Number' || (valueAST.value | 0) !== valueAST.value))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    if ((type instanceof GraphQLEnumType || type instanceof GraphQLScalarType) &&\n        ((valueAST.kind !== 'String' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'Boolean' &&\n            valueAST.kind !== 'Null') ||\n            isNullish(type.parseValue(valueAST.value)))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    return [];\n}\nfunction lintError(editor, node, message) {\n    return {\n        message,\n        severity: 'error',\n        type: 'validation',\n        from: editor.posFromIndex(node.start),\n        to: editor.posFromIndex(node.end),\n    };\n}\nfunction isNullish(value) {\n    return value === null || value === undefined || value !== value;\n}\nfunction mapCat(array, mapper) {\n    return Array.prototype.concat.apply([], array.map(mapper));\n}\n//# sourceMappingURL=lint.js.map"],"names":["jsonParse","str","string","strLen","start","end","lastEnd","ch","lex","ast","parseObj","expect","code","kind","nodeStart","members","skip","parseMember","key","curToken","value","parseVal","parseArr","values","token","found","match","syntaxError","JSONSyntaxError","message","position","k","readString","readNumber","readHex","readDigits","text","options","editor","error","lintError","variableToType","validateVariables","variablesAST","_a","errors","member","variableName","type","node","validateValue","valueAST","itemType","mapCat","item","providedFields","fieldErrors","fieldName","inputField","fieldType","field","isNullish","array","mapper"],"sourceRoot":""}