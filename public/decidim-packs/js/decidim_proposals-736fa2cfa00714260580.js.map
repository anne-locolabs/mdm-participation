{"version":3,"file":"js/decidim_proposals-736fa2cfa00714260580.js","mappings":"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","sources":["webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-proposals-0.30.1/app/packs/documents/ sync ^\\.\\/.*$","webpack://decidim-development-app/./node_modules/tom-select/dist/cjs/tom-select.popular.js","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-proposals-0.30.1/app/packs/images/ sync ^\\.\\/.*$","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-proposals-0.30.1/app/packs/src/decidim/proposals/utils.js","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-proposals-0.30.1/app/packs/src/decidim/proposals/exit_handler.js","webpack://decidim-development-app/webpack/bootstrap","webpack://decidim-development-app/webpack/runtime/compat get default export","webpack://decidim-development-app/webpack/runtime/define property getters","webpack://decidim-development-app/webpack/runtime/hasOwnProperty shorthand","webpack://decidim-development-app/webpack/runtime/publicPath","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-core-0.30.1/app/packs/src/decidim/geocoding/coordinate_input.js","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-core-0.30.1/app/packs/src/decidim/geocoding/attach_input.js","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-proposals-0.30.1/app/packs/src/decidim/proposals/add_proposal.js","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-proposals-0.30.1/app/packs/src/decidim/proposals/choose_proposals.js","webpack://decidim-development-app/../../.rbenv/versions/3.3.4/lib/ruby/gems/3.3.0/gems/decidim-proposals-0.30.1/app/packs/entrypoints/decidim_proposals.js"],"sourcesContent":["var map = {\n\t\"./decidim/proposals/participatory_texts/participatory_text.md\": 40829,\n\t\"./decidim/proposals/participatory_texts/participatory_text.odt\": 96689\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 43464;","/**\n* Tom Select v2.2.2\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n'use strict';\n\n/**\n * MicroEvent - to make any js object an event emitter\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * @author Jerome Etienne (https://github.com/jeromeetienne)\n */\n\n/**\n * Execute callback for each event in space separated list of event names\n *\n */\nfunction forEvents(events, callback) {\n  events.split(/\\s+/).forEach(event => {\n    callback(event);\n  });\n}\n\nclass MicroEvent {\n  constructor() {\n    this._events = void 0;\n    this._events = {};\n  }\n\n  on(events, fct) {\n    forEvents(events, event => {\n      const event_array = this._events[event] || [];\n      event_array.push(fct);\n      this._events[event] = event_array;\n    });\n  }\n\n  off(events, fct) {\n    var n = arguments.length;\n\n    if (n === 0) {\n      this._events = {};\n      return;\n    }\n\n    forEvents(events, event => {\n      if (n === 1) {\n        delete this._events[event];\n        return;\n      }\n\n      const event_array = this._events[event];\n      if (event_array === undefined) return;\n      event_array.splice(event_array.indexOf(fct), 1);\n      this._events[event] = event_array;\n    });\n  }\n\n  trigger(events, ...args) {\n    var self = this;\n    forEvents(events, event => {\n      const event_array = self._events[event];\n      if (event_array === undefined) return;\n      event_array.forEach(fct => {\n        fct.apply(self, args);\n      });\n    });\n  }\n\n}\n\n/**\n * microplugin.js\n * Copyright (c) 2013 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\nfunction MicroPlugin(Interface) {\n  Interface.plugins = {};\n  return class extends Interface {\n    constructor(...args) {\n      super(...args);\n      this.plugins = {\n        names: [],\n        settings: {},\n        requested: {},\n        loaded: {}\n      };\n    }\n\n    /**\n     * Registers a plugin.\n     *\n     * @param {function} fn\n     */\n    static define(name, fn) {\n      Interface.plugins[name] = {\n        'name': name,\n        'fn': fn\n      };\n    }\n    /**\n     * Initializes the listed plugins (with options).\n     * Acceptable formats:\n     *\n     * List (without options):\n     *   ['a', 'b', 'c']\n     *\n     * List (with options):\n     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n     *\n     * Hash (with options):\n     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n     *\n     * @param {array|object} plugins\n     */\n\n\n    initializePlugins(plugins) {\n      var key, name;\n      const self = this;\n      const queue = [];\n\n      if (Array.isArray(plugins)) {\n        plugins.forEach(plugin => {\n          if (typeof plugin === 'string') {\n            queue.push(plugin);\n          } else {\n            self.plugins.settings[plugin.name] = plugin.options;\n            queue.push(plugin.name);\n          }\n        });\n      } else if (plugins) {\n        for (key in plugins) {\n          if (plugins.hasOwnProperty(key)) {\n            self.plugins.settings[key] = plugins[key];\n            queue.push(key);\n          }\n        }\n      }\n\n      while (name = queue.shift()) {\n        self.require(name);\n      }\n    }\n\n    loadPlugin(name) {\n      var self = this;\n      var plugins = self.plugins;\n      var plugin = Interface.plugins[name];\n\n      if (!Interface.plugins.hasOwnProperty(name)) {\n        throw new Error('Unable to find \"' + name + '\" plugin');\n      }\n\n      plugins.requested[name] = true;\n      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n      plugins.names.push(name);\n    }\n    /**\n     * Initializes a plugin.\n     *\n     */\n\n\n    require(name) {\n      var self = this;\n      var plugins = self.plugins;\n\n      if (!self.plugins.loaded.hasOwnProperty(name)) {\n        if (plugins.requested[name]) {\n          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n        }\n\n        self.loadPlugin(name);\n      }\n\n      return plugins.loaded[name];\n    }\n\n  };\n}\n\n/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\n/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Get all possible combinations of substrings that add up to the given string\n * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n * @param {string} input\n * @return {string[][]}\n */\nconst allSubstrings = input => {\n  if (input.length === 1) return [[input]];\n  /** @type {string[][]} */\n\n  let result = [];\n  const start = input.substring(1);\n  const suba = allSubstrings(start);\n  suba.forEach(function (subresult) {\n    let tmp = subresult.slice(0);\n    tmp[0] = input.charAt(0) + tmp[0];\n    result.push(tmp);\n    tmp = subresult.slice(0);\n    tmp.unshift(input.charAt(0));\n    result.push(tmp);\n  });\n  return result;\n};\n\n/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n\n/**\n * @typedef {{[key:string]:string}} TUnicodeMap\n * @typedef {{[key:string]:Set<string>}} TUnicodeSets\n * @typedef {[[number,number]]} TCodePoints\n * @typedef {{folded:string,composed:string,code_point:number}} TCodePointObj\n * @typedef {{start:number,end:number,length:number,substr:string}} TSequencePart\n */\n/** @type {TCodePoints} */\n\nconst code_points = [[0, 65535]];\nconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}\\u{2bc}]';\n/** @type {TUnicodeMap} */\n\nlet unicode_map;\n/** @type {RegExp} */\n\nlet multi_char_reg;\nconst max_char_length = 3;\n/** @type {TUnicodeMap} */\n\nconst latin_convert = {};\n/** @type {TUnicodeMap} */\n\nconst latin_condensed = {\n  '/': '⁄∕',\n  '0': '߀',\n  \"a\": \"ⱥɐɑ\",\n  \"aa\": \"ꜳ\",\n  \"ae\": \"æǽǣ\",\n  \"ao\": \"ꜵ\",\n  \"au\": \"ꜷ\",\n  \"av\": \"ꜹꜻ\",\n  \"ay\": \"ꜽ\",\n  \"b\": \"ƀɓƃ\",\n  \"c\": \"ꜿƈȼↄ\",\n  \"d\": \"đɗɖᴅƌꮷԁɦ\",\n  \"e\": \"ɛǝᴇɇ\",\n  \"f\": \"ꝼƒ\",\n  \"g\": \"ǥɠꞡᵹꝿɢ\",\n  \"h\": \"ħⱨⱶɥ\",\n  \"i\": \"ɨı\",\n  \"j\": \"ɉȷ\",\n  \"k\": \"ƙⱪꝁꝃꝅꞣ\",\n  \"l\": \"łƚɫⱡꝉꝇꞁɭ\",\n  \"m\": \"ɱɯϻ\",\n  \"n\": \"ꞥƞɲꞑᴎлԉ\",\n  \"o\": \"øǿɔɵꝋꝍᴑ\",\n  \"oe\": \"œ\",\n  \"oi\": \"ƣ\",\n  \"oo\": \"ꝏ\",\n  \"ou\": \"ȣ\",\n  \"p\": \"ƥᵽꝑꝓꝕρ\",\n  \"q\": \"ꝗꝙɋ\",\n  \"r\": \"ɍɽꝛꞧꞃ\",\n  \"s\": \"ßȿꞩꞅʂ\",\n  \"t\": \"ŧƭʈⱦꞇ\",\n  \"th\": \"þ\",\n  \"tz\": \"ꜩ\",\n  \"u\": \"ʉ\",\n  \"v\": \"ʋꝟʌ\",\n  \"vy\": \"ꝡ\",\n  \"w\": \"ⱳ\",\n  \"y\": \"ƴɏỿ\",\n  \"z\": \"ƶȥɀⱬꝣ\",\n  \"hv\": \"ƕ\"\n};\n\nfor (let latin in latin_condensed) {\n  let unicode = latin_condensed[latin] || '';\n\n  for (let i = 0; i < unicode.length; i++) {\n    let char = unicode.substring(i, i + 1);\n    latin_convert[char] = latin;\n  }\n}\n\nconst convert_pat = new RegExp(Object.keys(latin_convert).join('|') + '|' + accent_pat, 'gu');\n/**\n * Initialize the unicode_map from the give code point ranges\n *\n * @param {TCodePoints=} _code_points\n */\n\nconst initialize = _code_points => {\n  if (unicode_map !== undefined) return;\n  unicode_map = generateMap(_code_points || code_points);\n};\n/**\n * Helper method for normalize a string\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize\n * @param {string} str\n * @param {string} form\n */\n\nconst normalize = (str, form = 'NFKD') => str.normalize(form);\n/**\n * Remove accents without reordering string\n * calling str.normalize('NFKD') on \\u{594}\\u{595}\\u{596} becomes \\u{596}\\u{594}\\u{595}\n * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n * @param {string} str\n * @return {string}\n */\n\nconst asciifold = str => {\n  return toArray(str).reduce(\n  /**\n   * @param {string} result\n   * @param {string} char\n   */\n  (result, char) => {\n    return result + _asciifold(char);\n  }, '');\n};\n/**\n * @param {string} str\n * @return {string}\n */\n\nconst _asciifold = str => {\n  str = normalize(str).toLowerCase().replace(convert_pat, (\n  /** @type {string} */\n  char) => {\n    return latin_convert[char] || '';\n  }); //return str;\n\n  return normalize(str, 'NFC');\n};\n/**\n * Generate a list of unicode variants from the list of code points\n * @param {TCodePoints} code_points\n * @yield {TCodePointObj}\n */\n\nfunction* generator(code_points) {\n  for (const [code_point_min, code_point_max] of code_points) {\n    for (let i = code_point_min; i <= code_point_max; i++) {\n      let composed = String.fromCharCode(i);\n      let folded = asciifold(composed);\n\n      if (folded == composed.toLowerCase()) {\n        continue;\n      } // skip when folded is a string longer than 3 characters long\n      // bc the resulting regex patterns will be long\n      // eg:\n      // folded صلى الله عليه وسلم length 18 code point 65018\n      // folded جل جلاله length 8 code point 65019\n\n\n      if (folded.length > max_char_length) {\n        continue;\n      }\n\n      if (folded.length == 0) {\n        continue;\n      }\n\n      yield {\n        folded: folded,\n        composed: composed,\n        code_point: i\n      };\n    }\n  }\n}\n/**\n * Generate a unicode map from the list of code points\n * @param {TCodePoints} code_points\n * @return {TUnicodeSets}\n */\n\nconst generateSets = code_points => {\n  /** @type {{[key:string]:Set<string>}} */\n  const unicode_sets = {};\n  /**\n   * @param {string} folded\n   * @param {string} to_add\n   */\n\n  const addMatching = (folded, to_add) => {\n    /** @type {Set<string>} */\n    const folded_set = unicode_sets[folded] || new Set();\n    const patt = new RegExp('^' + setToPattern(folded_set) + '$', 'iu');\n\n    if (to_add.match(patt)) {\n      return;\n    }\n\n    folded_set.add(escape_regex(to_add));\n    unicode_sets[folded] = folded_set;\n  };\n\n  for (let value of generator(code_points)) {\n    addMatching(value.folded, value.folded);\n    addMatching(value.folded, value.composed);\n  }\n\n  return unicode_sets;\n};\n/**\n * Generate a unicode map from the list of code points\n * ae => (?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n *\n * @param {TCodePoints} code_points\n * @return {TUnicodeMap}\n */\n\nconst generateMap = code_points => {\n  /** @type {TUnicodeSets} */\n  const unicode_sets = generateSets(code_points);\n  /** @type {TUnicodeMap} */\n\n  const unicode_map = {};\n  /** @type {string[]} */\n\n  let multi_char = [];\n\n  for (let folded in unicode_sets) {\n    let set = unicode_sets[folded];\n\n    if (set) {\n      unicode_map[folded] = setToPattern(set);\n    }\n\n    if (folded.length > 1) {\n      multi_char.push(escape_regex(folded));\n    }\n  }\n\n  multi_char.sort((a, b) => b.length - a.length);\n  const multi_char_patt = arrayToPattern(multi_char);\n  multi_char_reg = new RegExp('^' + multi_char_patt, 'u');\n  return unicode_map;\n};\n/**\n * Map each element of an array from it's folded value to all possible unicode matches\n * @param {string[]} strings\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst mapSequence = (strings, min_replacement = 1) => {\n  let chars_replaced = 0;\n  strings = strings.map(str => {\n    if (unicode_map[str]) {\n      chars_replaced += str.length;\n    }\n\n    return unicode_map[str] || str;\n  });\n\n  if (chars_replaced >= min_replacement) {\n    return sequencePattern(strings);\n  }\n\n  return '';\n};\n/**\n * Convert a short string and split it into all possible patterns\n * Keep a pattern only if min_replacement is met\n *\n * 'abc'\n * \t\t=> [['abc'],['ab','c'],['a','bc'],['a','b','c']]\n *\t\t=> ['abc-pattern','ab-c-pattern'...]\n *\n *\n * @param {string} str\n * @param {number} min_replacement\n * @return {string}\n */\n\nconst substringsToPattern = (str, min_replacement = 1) => {\n  min_replacement = Math.max(min_replacement, str.length - 1);\n  return arrayToPattern(allSubstrings(str).map(sub_pat => {\n    return mapSequence(sub_pat, min_replacement);\n  }));\n};\n/**\n * Convert an array of sequences into a pattern\n * [{start:0,end:3,length:3,substr:'iii'}...] => (?:iii...)\n *\n * @param {Sequence[]} sequences\n * @param {boolean} all\n */\n\nconst sequencesToPattern = (sequences, all = true) => {\n  let min_replacement = sequences.length > 1 ? 1 : 0;\n  return arrayToPattern(sequences.map(sequence => {\n    let seq = [];\n    const len = all ? sequence.length() : sequence.length() - 1;\n\n    for (let j = 0; j < len; j++) {\n      seq.push(substringsToPattern(sequence.substrs[j] || '', min_replacement));\n    }\n\n    return sequencePattern(seq);\n  }));\n};\n/**\n * Return true if the sequence is already in the sequences\n * @param {Sequence} needle_seq\n * @param {Sequence[]} sequences\n */\n\n\nconst inSequences = (needle_seq, sequences) => {\n  for (const seq of sequences) {\n    if (seq.start != needle_seq.start || seq.end != needle_seq.end) {\n      continue;\n    }\n\n    if (seq.substrs.join('') !== needle_seq.substrs.join('')) {\n      continue;\n    }\n\n    let needle_parts = needle_seq.parts;\n    /**\n     * @param {TSequencePart} part\n     */\n\n    const filter = part => {\n      for (const needle_part of needle_parts) {\n        if (needle_part.start === part.start && needle_part.substr === part.substr) {\n          return false;\n        }\n\n        if (part.length == 1 || needle_part.length == 1) {\n          continue;\n        } // check for overlapping parts\n        // a = ['::=','==']\n        // b = ['::','===']\n        // a = ['r','sm']\n        // b = ['rs','m']\n\n\n        if (part.start < needle_part.start && part.end > needle_part.start) {\n          return true;\n        }\n\n        if (needle_part.start < part.start && needle_part.end > part.start) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    let filtered = seq.parts.filter(filter);\n\n    if (filtered.length > 0) {\n      continue;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nclass Sequence {\n  constructor() {\n    /** @type {TSequencePart[]} */\n    this.parts = [];\n    /** @type {string[]} */\n\n    this.substrs = [];\n    this.start = 0;\n    this.end = 0;\n  }\n  /**\n   * @param {TSequencePart|undefined} part\n   */\n\n\n  add(part) {\n    if (part) {\n      this.parts.push(part);\n      this.substrs.push(part.substr);\n      this.start = Math.min(part.start, this.start);\n      this.end = Math.max(part.end, this.end);\n    }\n  }\n\n  last() {\n    return this.parts[this.parts.length - 1];\n  }\n\n  length() {\n    return this.parts.length;\n  }\n  /**\n   * @param {number} position\n   * @param {TSequencePart} last_piece\n   */\n\n\n  clone(position, last_piece) {\n    let clone = new Sequence();\n    let parts = JSON.parse(JSON.stringify(this.parts));\n    let last_part = parts.pop();\n\n    for (const part of parts) {\n      clone.add(part);\n    }\n\n    let last_substr = last_piece.substr.substring(0, position - last_part.start);\n    let clone_last_len = last_substr.length;\n    clone.add({\n      start: last_part.start,\n      end: last_part.start + clone_last_len,\n      length: clone_last_len,\n      substr: last_substr\n    });\n    return clone;\n  }\n\n}\n/**\n * Expand a regular expression pattern to include unicode variants\n * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n *\n * Issue:\n *  ﺊﺋ [ 'ﺊ = \\\\u{fe8a}', 'ﺋ = \\\\u{fe8b}' ]\n *\tbecomes:\tئئ [ 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}', 'ي = \\\\u{64a}', 'ٔ = \\\\u{654}' ]\n *\n *\tİĲ = IIJ = ⅡJ\n *\n * \t1/2/4\n *\n * @param {string} str\n * @return {string|undefined}\n */\n\n\nconst getPattern = str => {\n  initialize();\n  str = asciifold(str);\n  let pattern = '';\n  let sequences = [new Sequence()];\n\n  for (let i = 0; i < str.length; i++) {\n    let substr = str.substring(i);\n    let match = substr.match(multi_char_reg);\n    const char = str.substring(i, i + 1);\n    const match_str = match ? match[0] : null; // loop through sequences\n    // add either the char or multi_match\n\n    let overlapping = [];\n    let added_types = new Set();\n\n    for (const sequence of sequences) {\n      const last_piece = sequence.last();\n\n      if (!last_piece || last_piece.length == 1 || last_piece.end <= i) {\n        // if we have a multi match\n        if (match_str) {\n          const len = match_str.length;\n          sequence.add({\n            start: i,\n            end: i + len,\n            length: len,\n            substr: match_str\n          });\n          added_types.add('1');\n        } else {\n          sequence.add({\n            start: i,\n            end: i + 1,\n            length: 1,\n            substr: char\n          });\n          added_types.add('2');\n        }\n      } else if (match_str) {\n        let clone = sequence.clone(i, last_piece);\n        const len = match_str.length;\n        clone.add({\n          start: i,\n          end: i + len,\n          length: len,\n          substr: match_str\n        });\n        overlapping.push(clone);\n      } else {\n        // don't add char\n        // adding would create invalid patterns: 234 => [2,34,4]\n        added_types.add('3');\n      }\n    } // if we have overlapping\n\n\n    if (overlapping.length > 0) {\n      // ['ii','iii'] before ['i','i','iii']\n      overlapping = overlapping.sort((a, b) => {\n        return a.length() - b.length();\n      });\n\n      for (let clone of overlapping) {\n        // don't add if we already have an equivalent sequence\n        if (inSequences(clone, sequences)) {\n          continue;\n        }\n\n        sequences.push(clone);\n      }\n\n      continue;\n    } // if we haven't done anything unique\n    // clean up the patterns\n    // helps keep patterns smaller\n    // if str = 'r₨㎧aarss', pattern will be 446 instead of 655\n\n\n    if (i > 0 && added_types.size == 1 && !added_types.has('3')) {\n      pattern += sequencesToPattern(sequences, false);\n      let new_seq = new Sequence();\n      const old_seq = sequences[0];\n\n      if (old_seq) {\n        new_seq.add(old_seq.last());\n      }\n\n      sequences = [new_seq];\n    }\n  }\n\n  pattern += sequencesToPattern(sequences, true);\n  return pattern;\n};\n\n/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\nconst getAttr = (obj, name) => {\n  if (!obj) return;\n  return obj[name];\n};\n/**\n * A property getter resolving dot-notation\n * @param  {Object}  obj     The root object to fetch property on\n * @param  {String}  name    The optionally dotted property name to fetch\n * @return {Object}          The resolved property value\n */\n\nconst getAttrNesting = (obj, name) => {\n  if (!obj) return;\n  var part,\n      names = name.split(\".\");\n\n  while ((part = names.shift()) && (obj = obj[part]));\n\n  return obj;\n};\n/**\n * Calculates how close of a match the\n * given value is against a search token.\n *\n */\n\nconst scoreValue = (value, token, weight) => {\n  var score, pos;\n  if (!value) return 0;\n  value = value + '';\n  if (token.regex == null) return 0;\n  pos = value.search(token.regex);\n  if (pos === -1) return 0;\n  score = token.string.length / value.length;\n  if (pos === 0) score += 0.5;\n  return score * weight;\n};\n/**\n * Cast object property to an array if it exists and has a value\n *\n */\n\nconst propToArray = (obj, key) => {\n  var value = obj[key];\n  if (typeof value == 'function') return value;\n\n  if (value && !Array.isArray(value)) {\n    obj[key] = [value];\n  }\n};\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate$1 = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\nconst cmp = (a, b) => {\n  if (typeof a === 'number' && typeof b === 'number') {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  a = asciifold(a + '').toLowerCase();\n  b = asciifold(b + '').toLowerCase();\n  if (a > b) return 1;\n  if (b > a) return -1;\n  return 0;\n};\n\n/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n/**\n * sifter.js\n * Copyright (c) 2013–2020 Brian Reavis & contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n * @author Brian Reavis <brian@thirdroute.com>\n */\n\nclass Sifter {\n  // []|{};\n\n  /**\n   * Textually searches arrays and hashes of objects\n   * by property (or multiple properties). Designed\n   * specifically for autocomplete.\n   *\n   */\n  constructor(items, settings) {\n    this.items = void 0;\n    this.settings = void 0;\n    this.items = items;\n    this.settings = settings || {\n      diacritics: true\n    };\n  }\n\n  /**\n   * Splits a search string into an array of individual\n   * regexps to be used to match results.\n   *\n   */\n  tokenize(query, respect_word_boundaries, weights) {\n    if (!query || !query.length) return [];\n    const tokens = [];\n    const words = query.split(/\\s+/);\n    var field_regex;\n\n    if (weights) {\n      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n    }\n\n    words.forEach(word => {\n      let field_match;\n      let field = null;\n      let regex = null; // look for \"field:query\" tokens\n\n      if (field_regex && (field_match = word.match(field_regex))) {\n        field = field_match[1];\n        word = field_match[2];\n      }\n\n      if (word.length > 0) {\n        if (this.settings.diacritics) {\n          regex = getPattern(word) || null;\n        } else {\n          regex = escape_regex(word);\n        }\n\n        if (regex && respect_word_boundaries) regex = \"\\\\b\" + regex;\n      }\n\n      tokens.push({\n        string: word,\n        regex: regex ? new RegExp(regex, 'iu') : null,\n        field: field\n      });\n    });\n    return tokens;\n  }\n\n  /**\n   * Returns a function to be used to score individual results.\n   *\n   * Good matches will have a higher score than poor matches.\n   * If an item is not a match, 0 will be returned by the function.\n   *\n   * @returns {T.ScoreFn}\n   */\n  getScoreFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getScoreFunction(search);\n  }\n  /**\n   * @returns {T.ScoreFn}\n   *\n   */\n\n\n  _getScoreFunction(search) {\n    const tokens = search.tokens,\n          token_count = tokens.length;\n\n    if (!token_count) {\n      return function () {\n        return 0;\n      };\n    }\n\n    const fields = search.options.fields,\n          weights = search.weights,\n          field_count = fields.length,\n          getAttrFn = search.getAttrFn;\n\n    if (!field_count) {\n      return function () {\n        return 1;\n      };\n    }\n    /**\n     * Calculates the score of an object\n     * against the search query.\n     *\n     */\n\n\n    const scoreObject = function () {\n      if (field_count === 1) {\n        return function (token, data) {\n          const field = fields[0].field;\n          return scoreValue(getAttrFn(data, field), token, weights[field] || 1);\n        };\n      }\n\n      return function (token, data) {\n        var sum = 0; // is the token specific to a field?\n\n        if (token.field) {\n          const value = getAttrFn(data, token.field);\n\n          if (!token.regex && value) {\n            sum += 1 / field_count;\n          } else {\n            sum += scoreValue(value, token, 1);\n          }\n        } else {\n          iterate$1(weights, (weight, field) => {\n            sum += scoreValue(getAttrFn(data, field), token, weight);\n          });\n        }\n\n        return sum / field_count;\n      };\n    }();\n\n    if (token_count === 1) {\n      return function (data) {\n        return scoreObject(tokens[0], data);\n      };\n    }\n\n    if (search.options.conjunction === 'and') {\n      return function (data) {\n        var score,\n            sum = 0;\n\n        for (let token of tokens) {\n          score = scoreObject(token, data);\n          if (score <= 0) return 0;\n          sum += score;\n        }\n\n        return sum / token_count;\n      };\n    } else {\n      return function (data) {\n        var sum = 0;\n        iterate$1(tokens, token => {\n          sum += scoreObject(token, data);\n        });\n        return sum / token_count;\n      };\n    }\n  }\n\n  /**\n   * Returns a function that can be used to compare two\n   * results, for sorting purposes. If no sorting should\n   * be performed, `null` will be returned.\n   *\n   * @return function(a,b)\n   */\n  getSortFunction(query, options) {\n    var search = this.prepareSearch(query, options);\n    return this._getSortFunction(search);\n  }\n\n  _getSortFunction(search) {\n    var implicit_score,\n        sort_flds = [];\n    const self = this,\n          options = search.options,\n          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort;\n\n    if (typeof sort == 'function') {\n      return sort.bind(this);\n    }\n    /**\n     * Fetches the specified sort field value\n     * from a search result item.\n     *\n     */\n\n\n    const get_field = function get_field(name, result) {\n      if (name === '$score') return result.score;\n      return search.getAttrFn(self.items[result.id], name);\n    }; // parse options\n\n\n    if (sort) {\n      for (let s of sort) {\n        if (search.query || s.field !== '$score') {\n          sort_flds.push(s);\n        }\n      }\n    } // the \"$score\" field is implied to be the primary\n    // sort field, unless it's manually specified\n\n\n    if (search.query) {\n      implicit_score = true;\n\n      for (let fld of sort_flds) {\n        if (fld.field === '$score') {\n          implicit_score = false;\n          break;\n        }\n      }\n\n      if (implicit_score) {\n        sort_flds.unshift({\n          field: '$score',\n          direction: 'desc'\n        });\n      } // without a search.query, all items will have the same score\n\n    } else {\n      sort_flds = sort_flds.filter(fld => fld.field !== '$score');\n    } // build function\n\n\n    const sort_flds_count = sort_flds.length;\n\n    if (!sort_flds_count) {\n      return null;\n    }\n\n    return function (a, b) {\n      var result, field;\n\n      for (let sort_fld of sort_flds) {\n        field = sort_fld.field;\n        let multiplier = sort_fld.direction === 'desc' ? -1 : 1;\n        result = multiplier * cmp(get_field(field, a), get_field(field, b));\n        if (result) return result;\n      }\n\n      return 0;\n    };\n  }\n\n  /**\n   * Parses a search query and returns an object\n   * with tokens and fields ready to be populated\n   * with results.\n   *\n   */\n  prepareSearch(query, optsUser) {\n    const weights = {};\n    var options = Object.assign({}, optsUser);\n    propToArray(options, 'sort');\n    propToArray(options, 'sort_empty'); // convert fields to new format\n\n    if (options.fields) {\n      propToArray(options, 'fields');\n      const fields = [];\n      options.fields.forEach(field => {\n        if (typeof field == 'string') {\n          field = {\n            field: field,\n            weight: 1\n          };\n        }\n\n        fields.push(field);\n        weights[field.field] = 'weight' in field ? field.weight : 1;\n      });\n      options.fields = fields;\n    }\n\n    return {\n      options: options,\n      query: query.toLowerCase().trim(),\n      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n      total: 0,\n      items: [],\n      weights: weights,\n      getAttrFn: options.nesting ? getAttrNesting : getAttr\n    };\n  }\n\n  /**\n   * Searches through all items and returns a sorted array of matches.\n   *\n   */\n  search(query, options) {\n    var self = this,\n        score,\n        search;\n    search = this.prepareSearch(query, options);\n    options = search.options;\n    query = search.query; // generate result scoring function\n\n    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n    if (query.length) {\n      iterate$1(self.items, (item, id) => {\n        score = fn_score(item);\n\n        if (options.filter === false || score > 0) {\n          search.items.push({\n            'score': score,\n            'id': id\n          });\n        }\n      });\n    } else {\n      iterate$1(self.items, (_, id) => {\n        search.items.push({\n          'score': 1,\n          'id': id\n        });\n      });\n    }\n\n    const fn_sort = self._getSortFunction(search);\n\n    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n    search.total = search.items.length;\n\n    if (typeof options.limit === 'number') {\n      search.items = search.items.slice(0, options.limit);\n    }\n\n    return search;\n  }\n\n}\n\n/**\n * Iterates over arrays and hashes.\n *\n * ```\n * iterate(this.items, function(item, id) {\n *    // invoked for each item\n * });\n * ```\n *\n */\n\nconst iterate = (object, callback) => {\n  if (Array.isArray(object)) {\n    object.forEach(callback);\n  } else {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        callback(object[key], key);\n      }\n    }\n  }\n};\n\n/**\n * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n *\n * param query should be {}\n */\n\nconst getDom = query => {\n  if (query.jquery) {\n    return query[0];\n  }\n\n  if (query instanceof HTMLElement) {\n    return query;\n  }\n\n  if (isHtmlString(query)) {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n    return tpl.content.firstChild;\n  }\n\n  return document.querySelector(query);\n};\nconst isHtmlString = arg => {\n  if (typeof arg === 'string' && arg.indexOf('<') > -1) {\n    return true;\n  }\n\n  return false;\n};\nconst escapeQuery = query => {\n  return query.replace(/['\"\\\\]/g, '\\\\$&');\n};\n/**\n * Dispatch an event\n *\n */\n\nconst triggerEvent = (dom_el, event_name) => {\n  var event = document.createEvent('HTMLEvents');\n  event.initEvent(event_name, true, false);\n  dom_el.dispatchEvent(event);\n};\n/**\n * Apply CSS rules to a dom element\n *\n */\n\nconst applyCSS = (dom_el, css) => {\n  Object.assign(dom_el.style, css);\n};\n/**\n * Add css classes\n *\n */\n\nconst addClasses = (elmts, ...classes) => {\n  var norm_classes = classesArray(classes);\n  elmts = castAsArray(elmts);\n  elmts.map(el => {\n    norm_classes.map(cls => {\n      el.classList.add(cls);\n    });\n  });\n};\n/**\n * Remove css classes\n *\n */\n\nconst removeClasses = (elmts, ...classes) => {\n  var norm_classes = classesArray(classes);\n  elmts = castAsArray(elmts);\n  elmts.map(el => {\n    norm_classes.map(cls => {\n      el.classList.remove(cls);\n    });\n  });\n};\n/**\n * Return arguments\n *\n */\n\nconst classesArray = args => {\n  var classes = [];\n  iterate(args, _classes => {\n    if (typeof _classes === 'string') {\n      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n    }\n\n    if (Array.isArray(_classes)) {\n      classes = classes.concat(_classes);\n    }\n  });\n  return classes.filter(Boolean);\n};\n/**\n * Create an array from arg if it's not already an array\n *\n */\n\nconst castAsArray = arg => {\n  if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n\n  return arg;\n};\n/**\n * Get the closest node to the evt.target matching the selector\n * Stops at wrapper\n *\n */\n\nconst parentMatch = (target, selector, wrapper) => {\n  if (wrapper && !wrapper.contains(target)) {\n    return;\n  }\n\n  while (target && target.matches) {\n    if (target.matches(selector)) {\n      return target;\n    }\n\n    target = target.parentNode;\n  }\n};\n/**\n * Get the first or last item from an array\n *\n * > 0 - right (last)\n * <= 0 - left (first)\n *\n */\n\nconst getTail = (list, direction = 0) => {\n  if (direction > 0) {\n    return list[list.length - 1];\n  }\n\n  return list[0];\n};\n/**\n * Return true if an object is empty\n *\n */\n\nconst isEmptyObject = obj => {\n  return Object.keys(obj).length === 0;\n};\n/**\n * Get the index of an element amongst sibling nodes of the same type\n *\n */\n\nconst nodeIndex = (el, amongst) => {\n  if (!el) return -1;\n  amongst = amongst || el.nodeName;\n  var i = 0;\n\n  while (el = el.previousElementSibling) {\n    if (el.matches(amongst)) {\n      i++;\n    }\n  }\n\n  return i;\n};\n/**\n * Set attributes of an element\n *\n */\n\nconst setAttr = (el, attrs) => {\n  iterate(attrs, (val, attr) => {\n    if (val == null) {\n      el.removeAttribute(attr);\n    } else {\n      el.setAttribute(attr, '' + val);\n    }\n  });\n};\n/**\n * Replace a node\n */\n\nconst replaceNode = (existing, replacement) => {\n  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n};\n\n/**\n * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n * Highlights arbitrary terms in a node.\n *\n * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n */\nconst highlight = (element, regex) => {\n  if (regex === null) return; // convet string to regex\n\n  if (typeof regex === 'string') {\n    if (!regex.length) return;\n    regex = new RegExp(regex, 'i');\n  } // Wrap matching part of text node with highlighting <span>, e.g.\n  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n\n  const highlightText = node => {\n    var match = node.data.match(regex);\n\n    if (match && node.data.length > 0) {\n      var spannode = document.createElement('span');\n      spannode.className = 'highlight';\n      var middlebit = node.splitText(match.index);\n      middlebit.splitText(match[0].length);\n      var middleclone = middlebit.cloneNode(true);\n      spannode.appendChild(middleclone);\n      replaceNode(middlebit, spannode);\n      return 1;\n    }\n\n    return 0;\n  }; // Recurse element node, looking for child text nodes to highlight, unless element\n  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\n\n  const highlightChildren = node => {\n    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n      Array.from(node.childNodes).forEach(element => {\n        highlightRecursive(element);\n      });\n    }\n  };\n\n  const highlightRecursive = node => {\n    if (node.nodeType === 3) {\n      return highlightText(node);\n    }\n\n    highlightChildren(node);\n    return 0;\n  };\n\n  highlightRecursive(element);\n};\n/**\n * removeHighlight fn copied from highlight v5 and\n * edited to remove with(), pass js strict mode, and use without jquery\n */\n\nconst removeHighlight = el => {\n  var elements = el.querySelectorAll(\"span.highlight\");\n  Array.prototype.forEach.call(elements, function (el) {\n    var parent = el.parentNode;\n    parent.replaceChild(el.firstChild, el);\n    parent.normalize();\n  });\n};\n\nconst KEY_A = 65;\nconst KEY_RETURN = 13;\nconst KEY_ESC = 27;\nconst KEY_LEFT = 37;\nconst KEY_UP = 38;\nconst KEY_RIGHT = 39;\nconst KEY_DOWN = 40;\nconst KEY_BACKSPACE = 8;\nconst KEY_DELETE = 46;\nconst KEY_TAB = 9;\nconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\nconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\nvar defaults = {\n  options: [],\n  optgroups: [],\n  plugins: [],\n  delimiter: ',',\n  splitOn: null,\n  // regexp or string for splitting up values from a paste command\n  persist: true,\n  diacritics: true,\n  create: null,\n  createOnBlur: false,\n  createFilter: null,\n  highlight: true,\n  openOnFocus: true,\n  shouldOpen: null,\n  maxOptions: 50,\n  maxItems: null,\n  hideSelected: null,\n  duplicates: false,\n  addPrecedence: false,\n  selectOnTab: false,\n  preload: null,\n  allowEmptyOption: false,\n  //closeAfterSelect: false,\n  loadThrottle: 300,\n  loadingClass: 'loading',\n  dataAttr: null,\n  //'data-data',\n  optgroupField: 'optgroup',\n  valueField: 'value',\n  labelField: 'text',\n  disabledField: 'disabled',\n  optgroupLabelField: 'label',\n  optgroupValueField: 'value',\n  lockOptgroupOrder: false,\n  sortField: '$order',\n  searchField: ['text'],\n  searchConjunction: 'and',\n  mode: null,\n  wrapperClass: 'ts-wrapper',\n  controlClass: 'ts-control',\n  dropdownClass: 'ts-dropdown',\n  dropdownContentClass: 'ts-dropdown-content',\n  itemClass: 'item',\n  optionClass: 'option',\n  dropdownParent: null,\n  controlInput: '<input type=\"text\" autocomplete=\"off\" size=\"1\" />',\n  copyClassesToDropdown: false,\n  placeholder: null,\n  hidePlaceholder: null,\n  shouldLoad: function (query) {\n    return query.length > 0;\n  },\n\n  /*\n  load                 : null, // function(query, callback) { ... }\n  score                : null, // function(search) { ... }\n  onInitialize         : null, // function() { ... }\n  onChange             : null, // function(value) { ... }\n  onItemAdd            : null, // function(value, $item) { ... }\n  onItemRemove         : null, // function(value) { ... }\n  onClear              : null, // function() { ... }\n  onOptionAdd          : null, // function(value, data) { ... }\n  onOptionRemove       : null, // function(value) { ... }\n  onOptionClear        : null, // function() { ... }\n  onOptionGroupAdd     : null, // function(id, data) { ... }\n  onOptionGroupRemove  : null, // function(id) { ... }\n  onOptionGroupClear   : null, // function() { ... }\n  onDropdownOpen       : null, // function(dropdown) { ... }\n  onDropdownClose      : null, // function(dropdown) { ... }\n  onType               : null, // function(str) { ... }\n  onDelete             : null, // function(values) { ... }\n  */\n  render: {\n    /*\n    item: null,\n    optgroup: null,\n    optgroup_header: null,\n    option: null,\n    option_create: null\n    */\n  }\n};\n\n/**\n * Converts a scalar to its best string representation\n * for hash keys and HTML attribute values.\n *\n * Transformations:\n *   'str'     -> 'str'\n *   null      -> ''\n *   undefined -> ''\n *   true      -> '1'\n *   false     -> '0'\n *   0         -> '0'\n *   1         -> '1'\n *\n */\nconst hash_key = value => {\n  if (typeof value === 'undefined' || value === null) return null;\n  return get_hash(value);\n};\nconst get_hash = value => {\n  if (typeof value === 'boolean') return value ? '1' : '0';\n  return value + '';\n};\n/**\n * Escapes a string for use within HTML.\n *\n */\n\nconst escape_html = str => {\n  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n};\n/**\n * Debounce the user provided load function\n *\n */\n\nconst loadDebounce = (fn, delay) => {\n  var timeout;\n  return function (value, callback) {\n    var self = this;\n\n    if (timeout) {\n      self.loading = Math.max(self.loading - 1, 0);\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(function () {\n      timeout = null;\n      self.loadedSearches[value] = true;\n      fn.call(self, value, callback);\n    }, delay);\n  };\n};\n/**\n * Debounce all fired events types listed in `types`\n * while executing the provided `fn`.\n *\n */\n\nconst debounce_events = (self, types, fn) => {\n  var type;\n  var trigger = self.trigger;\n  var event_args = {}; // override trigger method\n\n  self.trigger = function () {\n    var type = arguments[0];\n\n    if (types.indexOf(type) !== -1) {\n      event_args[type] = arguments;\n    } else {\n      return trigger.apply(self, arguments);\n    }\n  }; // invoke provided function\n\n\n  fn.apply(self, []);\n  self.trigger = trigger; // trigger queued events\n\n  for (type of types) {\n    if (type in event_args) {\n      trigger.apply(self, event_args[type]);\n    }\n  }\n};\n/**\n * Determines the current selection within a text input control.\n * Returns an object containing:\n *   - start\n *   - length\n *\n */\n\nconst getSelection = input => {\n  return {\n    start: input.selectionStart || 0,\n    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n  };\n};\n/**\n * Prevent default\n *\n */\n\nconst preventDefault = (evt, stop = false) => {\n  if (evt) {\n    evt.preventDefault();\n\n    if (stop) {\n      evt.stopPropagation();\n    }\n  }\n};\n/**\n * Add event helper\n *\n */\n\nconst addEvent = (target, type, callback, options) => {\n  target.addEventListener(type, callback, options);\n};\n/**\n * Return true if the requested key is down\n * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n * The current evt may not always set ( eg calling advanceSelection() )\n *\n */\n\nconst isKeyDown = (key_name, evt) => {\n  if (!evt) {\n    return false;\n  }\n\n  if (!evt[key_name]) {\n    return false;\n  }\n\n  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\n  if (count === 1) {\n    return true;\n  }\n\n  return false;\n};\n/**\n * Get the id of an element\n * If the id attribute is not set, set the attribute with the given id\n *\n */\n\nconst getId = (el, id) => {\n  const existing_id = el.getAttribute('id');\n\n  if (existing_id) {\n    return existing_id;\n  }\n\n  el.setAttribute('id', id);\n  return id;\n};\n/**\n * Returns a string with backslashes added before characters that need to be escaped.\n */\n\nconst addSlashes = str => {\n  return str.replace(/[\\\\\"']/g, '\\\\$&');\n};\n/**\n *\n */\n\nconst append = (parent, node) => {\n  if (node) parent.append(node);\n};\n\nfunction getSettings(input, settings_user) {\n  var settings = Object.assign({}, defaults, settings_user);\n  var attr_data = settings.dataAttr;\n  var field_label = settings.labelField;\n  var field_value = settings.valueField;\n  var field_disabled = settings.disabledField;\n  var field_optgroup = settings.optgroupField;\n  var field_optgroup_label = settings.optgroupLabelField;\n  var field_optgroup_value = settings.optgroupValueField;\n  var tag_name = input.tagName.toLowerCase();\n  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n  if (!placeholder && !settings.allowEmptyOption) {\n    let option = input.querySelector('option[value=\"\"]');\n\n    if (option) {\n      placeholder = option.textContent;\n    }\n  }\n\n  var settings_element = {\n    placeholder: placeholder,\n    options: [],\n    optgroups: [],\n    items: [],\n    maxItems: null\n  };\n  /**\n   * Initialize from a <select> element.\n   *\n   */\n\n  var init_select = () => {\n    var tagName;\n    var options = settings_element.options;\n    var optionsMap = {};\n    var group_count = 1;\n\n    var readData = el => {\n      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n      var json = attr_data && data[attr_data];\n\n      if (typeof json === 'string' && json.length) {\n        data = Object.assign(data, JSON.parse(json));\n      }\n\n      return data;\n    };\n\n    var addOption = (option, group) => {\n      var value = hash_key(option.value);\n      if (value == null) return;\n      if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n      // duplicated in another optgroup. in this case, push\n      // the current group to the \"optgroup\" property on the\n      // existing option so that it's rendered in both places.\n\n      if (optionsMap.hasOwnProperty(value)) {\n        if (group) {\n          var arr = optionsMap[value][field_optgroup];\n\n          if (!arr) {\n            optionsMap[value][field_optgroup] = group;\n          } else if (!Array.isArray(arr)) {\n            optionsMap[value][field_optgroup] = [arr, group];\n          } else {\n            arr.push(group);\n          }\n        }\n      } else {\n        var option_data = readData(option);\n        option_data[field_label] = option_data[field_label] || option.textContent;\n        option_data[field_value] = option_data[field_value] || value;\n        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n        option_data[field_optgroup] = option_data[field_optgroup] || group;\n        option_data.$option = option;\n        optionsMap[value] = option_data;\n        options.push(option_data);\n      }\n\n      if (option.selected) {\n        settings_element.items.push(value);\n      }\n    };\n\n    var addGroup = optgroup => {\n      var id, optgroup_data;\n      optgroup_data = readData(optgroup);\n      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n      settings_element.optgroups.push(optgroup_data);\n      id = optgroup_data[field_optgroup_value];\n      iterate(optgroup.children, option => {\n        addOption(option, id);\n      });\n    };\n\n    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n    iterate(input.children, child => {\n      tagName = child.tagName.toLowerCase();\n\n      if (tagName === 'optgroup') {\n        addGroup(child);\n      } else if (tagName === 'option') {\n        addOption(child);\n      }\n    });\n  };\n  /**\n   * Initialize from a <input type=\"text\"> element.\n   *\n   */\n\n\n  var init_textbox = () => {\n    const data_raw = input.getAttribute(attr_data);\n\n    if (!data_raw) {\n      var value = input.value.trim() || '';\n      if (!settings.allowEmptyOption && !value.length) return;\n      const values = value.split(settings.delimiter);\n      iterate(values, value => {\n        const option = {};\n        option[field_label] = value;\n        option[field_value] = value;\n        settings_element.options.push(option);\n      });\n      settings_element.items = values;\n    } else {\n      settings_element.options = JSON.parse(data_raw);\n      iterate(settings_element.options, opt => {\n        settings_element.items.push(opt[field_value]);\n      });\n    }\n  };\n\n  if (tag_name === 'select') {\n    init_select();\n  } else {\n    init_textbox();\n  }\n\n  return Object.assign({}, defaults, settings_element, settings_user);\n}\n\nvar instance_i = 0;\nclass TomSelect extends MicroPlugin(MicroEvent) {\n  // @deprecated 1.8\n  constructor(input_arg, user_settings) {\n    super();\n    this.control_input = void 0;\n    this.wrapper = void 0;\n    this.dropdown = void 0;\n    this.control = void 0;\n    this.dropdown_content = void 0;\n    this.focus_node = void 0;\n    this.order = 0;\n    this.settings = void 0;\n    this.input = void 0;\n    this.tabIndex = void 0;\n    this.is_select_tag = void 0;\n    this.rtl = void 0;\n    this.inputId = void 0;\n    this._destroy = void 0;\n    this.sifter = void 0;\n    this.isOpen = false;\n    this.isDisabled = false;\n    this.isRequired = void 0;\n    this.isInvalid = false;\n    this.isValid = true;\n    this.isLocked = false;\n    this.isFocused = false;\n    this.isInputHidden = false;\n    this.isSetup = false;\n    this.ignoreFocus = false;\n    this.ignoreHover = false;\n    this.hasOptions = false;\n    this.currentResults = void 0;\n    this.lastValue = '';\n    this.caretPos = 0;\n    this.loading = 0;\n    this.loadedSearches = {};\n    this.activeOption = null;\n    this.activeItems = [];\n    this.optgroups = {};\n    this.options = {};\n    this.userOptions = {};\n    this.items = [];\n    instance_i++;\n    var dir;\n    var input = getDom(input_arg);\n\n    if (input.tomselect) {\n      throw new Error('Tom Select already initialized on this element');\n    }\n\n    input.tomselect = this; // detect rtl environment\n\n    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n    dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n    const settings = getSettings(input, user_settings);\n    this.settings = settings;\n    this.input = input;\n    this.tabIndex = input.tabIndex || 0;\n    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n    this.rtl = /rtl/i.test(dir);\n    this.inputId = getId(input, 'tomselect-' + instance_i);\n    this.isRequired = input.required; // search system\n\n    this.sifter = new Sifter(this.options, {\n      diacritics: settings.diacritics\n    }); // option-dependent defaults\n\n    settings.mode = settings.mode || (settings.maxItems === 1 ? 'single' : 'multi');\n\n    if (typeof settings.hideSelected !== 'boolean') {\n      settings.hideSelected = settings.mode === 'multi';\n    }\n\n    if (typeof settings.hidePlaceholder !== 'boolean') {\n      settings.hidePlaceholder = settings.mode !== 'multi';\n    } // set up createFilter callback\n\n\n    var filter = settings.createFilter;\n\n    if (typeof filter !== 'function') {\n      if (typeof filter === 'string') {\n        filter = new RegExp(filter);\n      }\n\n      if (filter instanceof RegExp) {\n        settings.createFilter = input => filter.test(input);\n      } else {\n        settings.createFilter = value => {\n          return this.settings.duplicates || !this.options[value];\n        };\n      }\n    }\n\n    this.initializePlugins(settings.plugins);\n    this.setupCallbacks();\n    this.setupTemplates(); // Create all elements\n\n    const wrapper = getDom('<div>');\n    const control = getDom('<div>');\n\n    const dropdown = this._render('dropdown');\n\n    const dropdown_content = getDom(`<div role=\"listbox\" tabindex=\"-1\">`);\n    const classes = this.input.getAttribute('class') || '';\n    const inputMode = settings.mode;\n    var control_input;\n    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n    addClasses(control, settings.controlClass);\n    append(wrapper, control);\n    addClasses(dropdown, settings.dropdownClass, inputMode);\n\n    if (settings.copyClassesToDropdown) {\n      addClasses(dropdown, classes);\n    }\n\n    addClasses(dropdown_content, settings.dropdownContentClass);\n    append(dropdown, dropdown_content);\n    getDom(settings.dropdownParent || wrapper).appendChild(dropdown); // default controlInput\n\n    if (isHtmlString(settings.controlInput)) {\n      control_input = getDom(settings.controlInput); // set attributes\n\n      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n      iterate$1(attrs, attr => {\n        if (input.getAttribute(attr)) {\n          setAttr(control_input, {\n            [attr]: input.getAttribute(attr)\n          });\n        }\n      });\n      control_input.tabIndex = -1;\n      control.appendChild(control_input);\n      this.focus_node = control_input; // dom element\n    } else if (settings.controlInput) {\n      control_input = getDom(settings.controlInput);\n      this.focus_node = control_input;\n    } else {\n      control_input = getDom('<input/>');\n      this.focus_node = control;\n    }\n\n    this.wrapper = wrapper;\n    this.dropdown = dropdown;\n    this.dropdown_content = dropdown_content;\n    this.control = control;\n    this.control_input = control_input;\n    this.setup();\n  }\n  /**\n   * set up event bindings.\n   *\n   */\n\n\n  setup() {\n    const self = this;\n    const settings = self.settings;\n    const control_input = self.control_input;\n    const dropdown = self.dropdown;\n    const dropdown_content = self.dropdown_content;\n    const wrapper = self.wrapper;\n    const control = self.control;\n    const input = self.input;\n    const focus_node = self.focus_node;\n    const passive_event = {\n      passive: true\n    };\n    const listboxId = self.inputId + '-ts-dropdown';\n    setAttr(dropdown_content, {\n      id: listboxId\n    });\n    setAttr(focus_node, {\n      role: 'combobox',\n      'aria-haspopup': 'listbox',\n      'aria-expanded': 'false',\n      'aria-controls': listboxId\n    });\n    const control_id = getId(focus_node, self.inputId + '-ts-control');\n    const query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n    const label = document.querySelector(query);\n    const label_click = self.focus.bind(self);\n\n    if (label) {\n      addEvent(label, 'click', label_click);\n      setAttr(label, {\n        for: control_id\n      });\n      const label_id = getId(label, self.inputId + '-ts-label');\n      setAttr(focus_node, {\n        'aria-labelledby': label_id\n      });\n      setAttr(dropdown_content, {\n        'aria-labelledby': label_id\n      });\n    }\n\n    wrapper.style.width = input.style.width;\n\n    if (self.plugins.names.length) {\n      const classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n      addClasses([wrapper, dropdown], classes_plugins);\n    }\n\n    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n      setAttr(input, {\n        multiple: 'multiple'\n      });\n    }\n\n    if (settings.placeholder) {\n      setAttr(control_input, {\n        placeholder: settings.placeholder\n      });\n    } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n\n    if (!settings.splitOn && settings.delimiter) {\n      settings.splitOn = new RegExp('\\\\s*' + escape_regex(settings.delimiter) + '+\\\\s*');\n    } // debounce user defined load() if loadThrottle > 0\n    // after initializePlugins() so plugins can create/modify user defined loaders\n\n\n    if (settings.load && settings.loadThrottle) {\n      settings.load = loadDebounce(settings.load, settings.loadThrottle);\n    }\n\n    self.control_input.type = input.type;\n    addEvent(dropdown, 'mousemove', () => {\n      self.ignoreHover = false;\n    });\n    addEvent(dropdown, 'mouseenter', e => {\n      var target_match = parentMatch(e.target, '[data-selectable]', dropdown);\n      if (target_match) self.onOptionHover(e, target_match);\n    }, {\n      capture: true\n    }); // clicking on an option should select it\n\n    addEvent(dropdown, 'click', evt => {\n      const option = parentMatch(evt.target, '[data-selectable]');\n\n      if (option) {\n        self.onOptionSelect(evt, option);\n        preventDefault(evt, true);\n      }\n    });\n    addEvent(control, 'click', evt => {\n      var target_match = parentMatch(evt.target, '[data-ts-item]', control);\n\n      if (target_match && self.onItemSelect(evt, target_match)) {\n        preventDefault(evt, true);\n        return;\n      } // retain focus (see control_input mousedown)\n\n\n      if (control_input.value != '') {\n        return;\n      }\n\n      self.onClick();\n      preventDefault(evt, true);\n    }); // keydown on focus_node for arrow_down/arrow_up\n\n    addEvent(focus_node, 'keydown', e => self.onKeyDown(e)); // keypress and input/keyup\n\n    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n    addEvent(control_input, 'input', e => self.onInput(e));\n    addEvent(focus_node, 'blur', e => self.onBlur(e));\n    addEvent(focus_node, 'focus', e => self.onFocus(e));\n    addEvent(control_input, 'paste', e => self.onPaste(e));\n\n    const doc_mousedown = evt => {\n      // blur if target is outside of this instance\n      // dropdown is not always inside wrapper\n      const target = evt.composedPath()[0];\n\n      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n        if (self.isFocused) {\n          self.blur();\n        }\n\n        self.inputState();\n        return;\n      } // retain focus by preventing native handling. if the\n      // event target is the input it should not be modified.\n      // otherwise, text selection within the input won't work.\n      // Fixes bug #212 which is no covered by tests\n\n\n      if (target == control_input && self.isOpen) {\n        evt.stopPropagation(); // clicking anywhere in the control should not blur the control_input (which would close the dropdown)\n      } else {\n        preventDefault(evt, true);\n      }\n    };\n\n    const win_scroll = () => {\n      if (self.isOpen) {\n        self.positionDropdown();\n      }\n    };\n\n    addEvent(document, 'mousedown', doc_mousedown);\n    addEvent(window, 'scroll', win_scroll, passive_event);\n    addEvent(window, 'resize', win_scroll, passive_event);\n\n    this._destroy = () => {\n      document.removeEventListener('mousedown', doc_mousedown);\n      window.removeEventListener('scroll', win_scroll);\n      window.removeEventListener('resize', win_scroll);\n      if (label) label.removeEventListener('click', label_click);\n    }; // store original html and tab index so that they can be\n    // restored when the destroy() method is called.\n\n\n    this.revertSettings = {\n      innerHTML: input.innerHTML,\n      tabIndex: input.tabIndex\n    };\n    input.tabIndex = -1;\n    input.insertAdjacentElement('afterend', self.wrapper);\n    self.sync(false);\n    settings.items = [];\n    delete settings.optgroups;\n    delete settings.options;\n    addEvent(input, 'invalid', () => {\n      if (self.isValid) {\n        self.isValid = false;\n        self.isInvalid = true;\n        self.refreshState();\n      }\n    });\n    self.updateOriginalInput();\n    self.refreshItems();\n    self.close(false);\n    self.inputState();\n    self.isSetup = true;\n\n    if (input.disabled) {\n      self.disable();\n    } else {\n      self.enable(); //sets tabIndex\n    }\n\n    self.on('change', this.onChange);\n    addClasses(input, 'tomselected', 'ts-hidden-accessible');\n    self.trigger('initialize'); // preload options\n\n    if (settings.preload === true) {\n      self.preload();\n    }\n  }\n  /**\n   * Register options and optgroups\n   *\n   */\n\n\n  setupOptions(options = [], optgroups = []) {\n    // build options table\n    this.addOptions(options); // build optgroup table\n\n    iterate$1(optgroups, optgroup => {\n      this.registerOptionGroup(optgroup);\n    });\n  }\n  /**\n   * Sets up default rendering functions.\n   */\n\n\n  setupTemplates() {\n    var self = this;\n    var field_label = self.settings.labelField;\n    var field_optgroup = self.settings.optgroupLabelField;\n    var templates = {\n      'optgroup': data => {\n        let optgroup = document.createElement('div');\n        optgroup.className = 'optgroup';\n        optgroup.appendChild(data.options);\n        return optgroup;\n      },\n      'optgroup_header': (data, escape) => {\n        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n      },\n      'option': (data, escape) => {\n        return '<div>' + escape(data[field_label]) + '</div>';\n      },\n      'item': (data, escape) => {\n        return '<div>' + escape(data[field_label]) + '</div>';\n      },\n      'option_create': (data, escape) => {\n        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n      },\n      'no_results': () => {\n        return '<div class=\"no-results\">No results found</div>';\n      },\n      'loading': () => {\n        return '<div class=\"spinner\"></div>';\n      },\n      'not_loading': () => {},\n      'dropdown': () => {\n        return '<div></div>';\n      }\n    };\n    self.settings.render = Object.assign({}, templates, self.settings.render);\n  }\n  /**\n   * Maps fired events to callbacks provided\n   * in the settings used when creating the control.\n   */\n\n\n  setupCallbacks() {\n    var key, fn;\n    var callbacks = {\n      'initialize': 'onInitialize',\n      'change': 'onChange',\n      'item_add': 'onItemAdd',\n      'item_remove': 'onItemRemove',\n      'item_select': 'onItemSelect',\n      'clear': 'onClear',\n      'option_add': 'onOptionAdd',\n      'option_remove': 'onOptionRemove',\n      'option_clear': 'onOptionClear',\n      'optgroup_add': 'onOptionGroupAdd',\n      'optgroup_remove': 'onOptionGroupRemove',\n      'optgroup_clear': 'onOptionGroupClear',\n      'dropdown_open': 'onDropdownOpen',\n      'dropdown_close': 'onDropdownClose',\n      'type': 'onType',\n      'load': 'onLoad',\n      'focus': 'onFocus',\n      'blur': 'onBlur'\n    };\n\n    for (key in callbacks) {\n      fn = this.settings[callbacks[key]];\n      if (fn) this.on(key, fn);\n    }\n  }\n  /**\n   * Sync the Tom Select instance with the original input or select\n   *\n   */\n\n\n  sync(get_settings = true) {\n    const self = this;\n    const settings = get_settings ? getSettings(self.input, {\n      delimiter: self.settings.delimiter\n    }) : self.settings;\n    self.setupOptions(settings.options, settings.optgroups);\n    self.setValue(settings.items || [], true); // silent prevents recursion\n\n    self.lastQuery = null; // so updated options will be displayed in dropdown\n  }\n  /**\n   * Triggered when the main control element\n   * has a click event.\n   *\n   */\n\n\n  onClick() {\n    var self = this;\n\n    if (self.activeItems.length > 0) {\n      self.clearActiveItems();\n      self.focus();\n      return;\n    }\n\n    if (self.isFocused && self.isOpen) {\n      self.blur();\n    } else {\n      self.focus();\n    }\n  }\n  /**\n   * @deprecated v1.7\n   *\n   */\n\n\n  onMouseDown() {}\n  /**\n   * Triggered when the value of the control has been changed.\n   * This should propagate the event to the original DOM\n   * input / select element.\n   */\n\n\n  onChange() {\n    triggerEvent(this.input, 'input');\n    triggerEvent(this.input, 'change');\n  }\n  /**\n   * Triggered on <input> paste.\n   *\n   */\n\n\n  onPaste(e) {\n    var self = this;\n\n    if (self.isInputHidden || self.isLocked) {\n      preventDefault(e);\n      return;\n    } // If a regex or string is included, this will split the pasted\n    // input and create Items for each separate value\n\n\n    if (!self.settings.splitOn) {\n      return;\n    } // Wait for pasted text to be recognized in value\n\n\n    setTimeout(() => {\n      var pastedText = self.inputValue();\n\n      if (!pastedText.match(self.settings.splitOn)) {\n        return;\n      }\n\n      var splitInput = pastedText.trim().split(self.settings.splitOn);\n      iterate$1(splitInput, piece => {\n        const hash = hash_key(piece);\n\n        if (hash) {\n          if (this.options[piece]) {\n            self.addItem(piece);\n          } else {\n            self.createItem(piece);\n          }\n        }\n      });\n    }, 0);\n  }\n  /**\n   * Triggered on <input> keypress.\n   *\n   */\n\n\n  onKeyPress(e) {\n    var self = this;\n\n    if (self.isLocked) {\n      preventDefault(e);\n      return;\n    }\n\n    var character = String.fromCharCode(e.keyCode || e.which);\n\n    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n      self.createItem();\n      preventDefault(e);\n      return;\n    }\n  }\n  /**\n   * Triggered on <input> keydown.\n   *\n   */\n\n\n  onKeyDown(e) {\n    var self = this;\n    self.ignoreHover = true;\n\n    if (self.isLocked) {\n      if (e.keyCode !== KEY_TAB) {\n        preventDefault(e);\n      }\n\n      return;\n    }\n\n    switch (e.keyCode) {\n      // ctrl+A: select all\n      case KEY_A:\n        if (isKeyDown(KEY_SHORTCUT, e)) {\n          if (self.control_input.value == '') {\n            preventDefault(e);\n            self.selectAll();\n            return;\n          }\n        }\n\n        break;\n      // esc: close dropdown\n\n      case KEY_ESC:\n        if (self.isOpen) {\n          preventDefault(e, true);\n          self.close();\n        }\n\n        self.clearActiveItems();\n        return;\n      // down: open dropdown or move selection down\n\n      case KEY_DOWN:\n        if (!self.isOpen && self.hasOptions) {\n          self.open();\n        } else if (self.activeOption) {\n          let next = self.getAdjacent(self.activeOption, 1);\n          if (next) self.setActiveOption(next);\n        }\n\n        preventDefault(e);\n        return;\n      // up: move selection up\n\n      case KEY_UP:\n        if (self.activeOption) {\n          let prev = self.getAdjacent(self.activeOption, -1);\n          if (prev) self.setActiveOption(prev);\n        }\n\n        preventDefault(e);\n        return;\n      // return: select active option\n\n      case KEY_RETURN:\n        if (self.canSelect(self.activeOption)) {\n          self.onOptionSelect(e, self.activeOption);\n          preventDefault(e); // if the option_create=null, the dropdown might be closed\n        } else if (self.settings.create && self.createItem()) {\n          preventDefault(e); // don't submit form when searching for a value\n        } else if (document.activeElement == self.control_input && self.isOpen) {\n          preventDefault(e);\n        }\n\n        return;\n      // left: modifiy item selection to the left\n\n      case KEY_LEFT:\n        self.advanceSelection(-1, e);\n        return;\n      // right: modifiy item selection to the right\n\n      case KEY_RIGHT:\n        self.advanceSelection(1, e);\n        return;\n      // tab: select active option and/or create item\n\n      case KEY_TAB:\n        if (self.settings.selectOnTab) {\n          if (self.canSelect(self.activeOption)) {\n            self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n            preventDefault(e);\n          }\n\n          if (self.settings.create && self.createItem()) {\n            preventDefault(e);\n          }\n        }\n\n        return;\n      // delete|backspace: delete items\n\n      case KEY_BACKSPACE:\n      case KEY_DELETE:\n        self.deleteSelection(e);\n        return;\n    } // don't enter text in the control_input when active items are selected\n\n\n    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n      preventDefault(e);\n    }\n  }\n  /**\n   * Triggered on <input> keyup.\n   *\n   */\n\n\n  onInput(e) {\n    var self = this;\n\n    if (self.isLocked) {\n      return;\n    }\n\n    var value = self.inputValue();\n\n    if (self.lastValue !== value) {\n      self.lastValue = value;\n\n      if (self.settings.shouldLoad.call(self, value)) {\n        self.load(value);\n      }\n\n      self.refreshOptions();\n      self.trigger('type', value);\n    }\n  }\n  /**\n   * Triggered when the user rolls over\n   * an option in the autocomplete dropdown menu.\n   *\n   */\n\n\n  onOptionHover(evt, option) {\n    if (this.ignoreHover) return;\n    this.setActiveOption(option, false);\n  }\n  /**\n   * Triggered on <input> focus.\n   *\n   */\n\n\n  onFocus(e) {\n    var self = this;\n    var wasFocused = self.isFocused;\n\n    if (self.isDisabled) {\n      self.blur();\n      preventDefault(e);\n      return;\n    }\n\n    if (self.ignoreFocus) return;\n    self.isFocused = true;\n    if (self.settings.preload === 'focus') self.preload();\n    if (!wasFocused) self.trigger('focus');\n\n    if (!self.activeItems.length) {\n      self.showInput();\n      self.refreshOptions(!!self.settings.openOnFocus);\n    }\n\n    self.refreshState();\n  }\n  /**\n   * Triggered on <input> blur.\n   *\n   */\n\n\n  onBlur(e) {\n    if (document.hasFocus() === false) return;\n    var self = this;\n    if (!self.isFocused) return;\n    self.isFocused = false;\n    self.ignoreFocus = false;\n\n    var deactivate = () => {\n      self.close();\n      self.setActiveItem();\n      self.setCaret(self.items.length);\n      self.trigger('blur');\n    };\n\n    if (self.settings.create && self.settings.createOnBlur) {\n      self.createItem(null, deactivate);\n    } else {\n      deactivate();\n    }\n  }\n  /**\n   * Triggered when the user clicks on an option\n   * in the autocomplete dropdown menu.\n   *\n   */\n\n\n  onOptionSelect(evt, option) {\n    var value,\n        self = this; // should not be possible to trigger a option under a disabled optgroup\n\n    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n      return;\n    }\n\n    if (option.classList.contains('create')) {\n      self.createItem(null, () => {\n        if (self.settings.closeAfterSelect) {\n          self.close();\n        }\n      });\n    } else {\n      value = option.dataset.value;\n\n      if (typeof value !== 'undefined') {\n        self.lastQuery = null;\n        self.addItem(value);\n\n        if (self.settings.closeAfterSelect) {\n          self.close();\n        }\n\n        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n          self.setActiveOption(option);\n        }\n      }\n    }\n  }\n  /**\n   * Return true if the given option can be selected\n   *\n   */\n\n\n  canSelect(option) {\n    if (this.isOpen && option && this.dropdown_content.contains(option)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Triggered when the user clicks on an item\n   * that has been selected.\n   *\n   */\n\n\n  onItemSelect(evt, item) {\n    var self = this;\n\n    if (!self.isLocked && self.settings.mode === 'multi') {\n      preventDefault(evt);\n      self.setActiveItem(item, evt);\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Determines whether or not to invoke\n   * the user-provided option provider / loader\n   *\n   * Note, there is a subtle difference between\n   * this.canLoad() and this.settings.shouldLoad();\n   *\n   *\t- settings.shouldLoad() is a user-input validator.\n   *\tWhen false is returned, the not_loading template\n   *\twill be added to the dropdown\n   *\n   *\t- canLoad() is lower level validator that checks\n   * \tthe Tom Select instance. There is no inherent user\n   *\tfeedback when canLoad returns false\n   *\n   */\n\n\n  canLoad(value) {\n    if (!this.settings.load) return false;\n    if (this.loadedSearches.hasOwnProperty(value)) return false;\n    return true;\n  }\n  /**\n   * Invokes the user-provided option provider / loader.\n   *\n   */\n\n\n  load(value) {\n    const self = this;\n    if (!self.canLoad(value)) return;\n    addClasses(self.wrapper, self.settings.loadingClass);\n    self.loading++;\n    const callback = self.loadCallback.bind(self);\n    self.settings.load.call(self, value, callback);\n  }\n  /**\n   * Invoked by the user-provided option provider\n   *\n   */\n\n\n  loadCallback(options, optgroups) {\n    const self = this;\n    self.loading = Math.max(self.loading - 1, 0);\n    self.lastQuery = null;\n    self.clearActiveOption(); // when new results load, focus should be on first option\n\n    self.setupOptions(options, optgroups);\n    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\n    if (!self.loading) {\n      removeClasses(self.wrapper, self.settings.loadingClass);\n    }\n\n    self.trigger('load', options, optgroups);\n  }\n\n  preload() {\n    var classList = this.wrapper.classList;\n    if (classList.contains('preloaded')) return;\n    classList.add('preloaded');\n    this.load('');\n  }\n  /**\n   * Sets the input field of the control to the specified value.\n   *\n   */\n\n\n  setTextboxValue(value = '') {\n    var input = this.control_input;\n    var changed = input.value !== value;\n\n    if (changed) {\n      input.value = value;\n      triggerEvent(input, 'update');\n      this.lastValue = value;\n    }\n  }\n  /**\n   * Returns the value of the control. If multiple items\n   * can be selected (e.g. <select multiple>), this returns\n   * an array. If only one item can be selected, this\n   * returns a string.\n   *\n   */\n\n\n  getValue() {\n    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n      return this.items;\n    }\n\n    return this.items.join(this.settings.delimiter);\n  }\n  /**\n   * Resets the selected items to the given value.\n   *\n   */\n\n\n  setValue(value, silent) {\n    var events = silent ? [] : ['change'];\n    debounce_events(this, events, () => {\n      this.clear(silent);\n      this.addItems(value, silent);\n    });\n  }\n  /**\n   * Resets the number of max items to the given value\n   *\n   */\n\n\n  setMaxItems(value) {\n    if (value === 0) value = null; //reset to unlimited items.\n\n    this.settings.maxItems = value;\n    this.refreshState();\n  }\n  /**\n   * Sets the selected item.\n   *\n   */\n\n\n  setActiveItem(item, e) {\n    var self = this;\n    var eventName;\n    var i, begin, end, swap;\n    var last;\n    if (self.settings.mode === 'single') return; // clear the active selection\n\n    if (!item) {\n      self.clearActiveItems();\n\n      if (self.isFocused) {\n        self.showInput();\n      }\n\n      return;\n    } // modify selection\n\n\n    eventName = e && e.type.toLowerCase();\n\n    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n      last = self.getLastActive();\n      begin = Array.prototype.indexOf.call(self.control.children, last);\n      end = Array.prototype.indexOf.call(self.control.children, item);\n\n      if (begin > end) {\n        swap = begin;\n        begin = end;\n        end = swap;\n      }\n\n      for (i = begin; i <= end; i++) {\n        item = self.control.children[i];\n\n        if (self.activeItems.indexOf(item) === -1) {\n          self.setActiveItemClass(item);\n        }\n      }\n\n      preventDefault(e);\n    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n      if (item.classList.contains('active')) {\n        self.removeActiveItem(item);\n      } else {\n        self.setActiveItemClass(item);\n      }\n    } else {\n      self.clearActiveItems();\n      self.setActiveItemClass(item);\n    } // ensure control has focus\n\n\n    self.hideInput();\n\n    if (!self.isFocused) {\n      self.focus();\n    }\n  }\n  /**\n   * Set the active and last-active classes\n   *\n   */\n\n\n  setActiveItemClass(item) {\n    const self = this;\n    const last_active = self.control.querySelector('.last-active');\n    if (last_active) removeClasses(last_active, 'last-active');\n    addClasses(item, 'active last-active');\n    self.trigger('item_select', item);\n\n    if (self.activeItems.indexOf(item) == -1) {\n      self.activeItems.push(item);\n    }\n  }\n  /**\n   * Remove active item\n   *\n   */\n\n\n  removeActiveItem(item) {\n    var idx = this.activeItems.indexOf(item);\n    this.activeItems.splice(idx, 1);\n    removeClasses(item, 'active');\n  }\n  /**\n   * Clears all the active items\n   *\n   */\n\n\n  clearActiveItems() {\n    removeClasses(this.activeItems, 'active');\n    this.activeItems = [];\n  }\n  /**\n   * Sets the selected item in the dropdown menu\n   * of available options.\n   *\n   */\n\n\n  setActiveOption(option, scroll = true) {\n    if (option === this.activeOption) {\n      return;\n    }\n\n    this.clearActiveOption();\n    if (!option) return;\n    this.activeOption = option;\n    setAttr(this.focus_node, {\n      'aria-activedescendant': option.getAttribute('id')\n    });\n    setAttr(option, {\n      'aria-selected': 'true'\n    });\n    addClasses(option, 'active');\n    if (scroll) this.scrollToOption(option);\n  }\n  /**\n   * Sets the dropdown_content scrollTop to display the option\n   *\n   */\n\n\n  scrollToOption(option, behavior) {\n    if (!option) return;\n    const content = this.dropdown_content;\n    const height_menu = content.clientHeight;\n    const scrollTop = content.scrollTop || 0;\n    const height_item = option.offsetHeight;\n    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n    if (y + height_item > height_menu + scrollTop) {\n      this.scroll(y - height_menu + height_item, behavior);\n    } else if (y < scrollTop) {\n      this.scroll(y, behavior);\n    }\n  }\n  /**\n   * Scroll the dropdown to the given position\n   *\n   */\n\n\n  scroll(scrollTop, behavior) {\n    const content = this.dropdown_content;\n\n    if (behavior) {\n      content.style.scrollBehavior = behavior;\n    }\n\n    content.scrollTop = scrollTop;\n    content.style.scrollBehavior = '';\n  }\n  /**\n   * Clears the active option\n   *\n   */\n\n\n  clearActiveOption() {\n    if (this.activeOption) {\n      removeClasses(this.activeOption, 'active');\n      setAttr(this.activeOption, {\n        'aria-selected': null\n      });\n    }\n\n    this.activeOption = null;\n    setAttr(this.focus_node, {\n      'aria-activedescendant': null\n    });\n  }\n  /**\n   * Selects all items (CTRL + A).\n   */\n\n\n  selectAll() {\n    const self = this;\n    if (self.settings.mode === 'single') return;\n    const activeItems = self.controlChildren();\n    if (!activeItems.length) return;\n    self.hideInput();\n    self.close();\n    self.activeItems = activeItems;\n    iterate$1(activeItems, item => {\n      self.setActiveItemClass(item);\n    });\n  }\n  /**\n   * Determines if the control_input should be in a hidden or visible state\n   *\n   */\n\n\n  inputState() {\n    var self = this;\n    if (!self.control.contains(self.control_input)) return;\n    setAttr(self.control_input, {\n      placeholder: self.settings.placeholder\n    });\n\n    if (self.activeItems.length > 0 || !self.isFocused && self.settings.hidePlaceholder && self.items.length > 0) {\n      self.setTextboxValue();\n      self.isInputHidden = true;\n    } else {\n      if (self.settings.hidePlaceholder && self.items.length > 0) {\n        setAttr(self.control_input, {\n          placeholder: ''\n        });\n      }\n\n      self.isInputHidden = false;\n    }\n\n    self.wrapper.classList.toggle('input-hidden', self.isInputHidden);\n  }\n  /**\n   * Hides the input element out of view, while\n   * retaining its focus.\n   * @deprecated 1.3\n   */\n\n\n  hideInput() {\n    this.inputState();\n  }\n  /**\n   * Restores input visibility.\n   * @deprecated 1.3\n   */\n\n\n  showInput() {\n    this.inputState();\n  }\n  /**\n   * Get the input value\n   */\n\n\n  inputValue() {\n    return this.control_input.value.trim();\n  }\n  /**\n   * Gives the control focus.\n   */\n\n\n  focus() {\n    var self = this;\n    if (self.isDisabled) return;\n    self.ignoreFocus = true;\n\n    if (self.control_input.offsetWidth) {\n      self.control_input.focus();\n    } else {\n      self.focus_node.focus();\n    }\n\n    setTimeout(() => {\n      self.ignoreFocus = false;\n      self.onFocus();\n    }, 0);\n  }\n  /**\n   * Forces the control out of focus.\n   *\n   */\n\n\n  blur() {\n    this.focus_node.blur();\n    this.onBlur();\n  }\n  /**\n   * Returns a function that scores an object\n   * to show how good of a match it is to the\n   * provided query.\n   *\n   * @return {function}\n   */\n\n\n  getScoreFunction(query) {\n    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n  }\n  /**\n   * Returns search options for sifter (the system\n   * for scoring and sorting results).\n   *\n   * @see https://github.com/orchidjs/sifter.js\n   * @return {object}\n   */\n\n\n  getSearchOptions() {\n    var settings = this.settings;\n    var sort = settings.sortField;\n\n    if (typeof settings.sortField === 'string') {\n      sort = [{\n        field: settings.sortField\n      }];\n    }\n\n    return {\n      fields: settings.searchField,\n      conjunction: settings.searchConjunction,\n      sort: sort,\n      nesting: settings.nesting\n    };\n  }\n  /**\n   * Searches through available options and returns\n   * a sorted array of matches.\n   *\n   */\n\n\n  search(query) {\n    var result, calculateScore;\n    var self = this;\n    var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n    if (self.settings.score) {\n      calculateScore = self.settings.score.call(self, query);\n\n      if (typeof calculateScore !== 'function') {\n        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n      }\n    } // perform search\n\n\n    if (query !== self.lastQuery) {\n      self.lastQuery = query;\n      result = self.sifter.search(query, Object.assign(options, {\n        score: calculateScore\n      }));\n      self.currentResults = result;\n    } else {\n      result = Object.assign({}, self.currentResults);\n    } // filter out selected items\n\n\n    if (self.settings.hideSelected) {\n      result.items = result.items.filter(item => {\n        let hashed = hash_key(item.id);\n        return !(hashed && self.items.indexOf(hashed) !== -1);\n      });\n    }\n\n    return result;\n  }\n  /**\n   * Refreshes the list of available options shown\n   * in the autocomplete dropdown menu.\n   *\n   */\n\n\n  refreshOptions(triggerDropdown = true) {\n    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_group;\n    var create;\n    const groups = {};\n    const groups_order = [];\n    var self = this;\n    var query = self.inputValue();\n    const same_query = query === self.lastQuery || query == '' && self.lastQuery == null;\n    var results = self.search(query);\n    var active_option = null;\n    var show_dropdown = self.settings.shouldOpen || false;\n    var dropdown_content = self.dropdown_content;\n\n    if (same_query) {\n      active_option = self.activeOption;\n\n      if (active_option) {\n        active_group = active_option.closest('[data-group]');\n      }\n    } // build markup\n\n\n    n = results.items.length;\n\n    if (typeof self.settings.maxOptions === 'number') {\n      n = Math.min(n, self.settings.maxOptions);\n    }\n\n    if (n > 0) {\n      show_dropdown = true;\n    } // render and group available options individually\n\n\n    for (i = 0; i < n; i++) {\n      // get option dom element\n      let item = results.items[i];\n      if (!item) continue;\n      let opt_value = item.id;\n      let option = self.options[opt_value];\n      if (option === undefined) continue;\n      let opt_hash = get_hash(opt_value);\n      let option_el = self.getOption(opt_hash, true); // toggle 'selected' class\n\n      if (!self.settings.hideSelected) {\n        option_el.classList.toggle('selected', self.items.includes(opt_hash));\n      }\n\n      optgroup = option[self.settings.optgroupField] || '';\n      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n        optgroup = optgroups[j];\n\n        if (!self.optgroups.hasOwnProperty(optgroup)) {\n          optgroup = '';\n        }\n\n        let group_fragment = groups[optgroup];\n\n        if (group_fragment === undefined) {\n          group_fragment = document.createDocumentFragment();\n          groups_order.push(optgroup);\n        } // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\n\n        if (j > 0) {\n          option_el = option_el.cloneNode(true);\n          setAttr(option_el, {\n            id: option.$id + '-clone-' + j,\n            'aria-selected': null\n          });\n          option_el.classList.add('ts-cloned');\n          removeClasses(option_el, 'active'); // make sure we keep the activeOption in the same group\n\n          if (self.activeOption && self.activeOption.dataset.value == opt_value) {\n            if (active_group && active_group.dataset.group === optgroup.toString()) {\n              active_option = option_el;\n            }\n          }\n        }\n\n        group_fragment.appendChild(option_el);\n        groups[optgroup] = group_fragment;\n      }\n    } // sort optgroups\n\n\n    if (self.settings.lockOptgroupOrder) {\n      groups_order.sort((a, b) => {\n        const grp_a = self.optgroups[a];\n        const grp_b = self.optgroups[b];\n        const a_order = grp_a && grp_a.$order || 0;\n        const b_order = grp_b && grp_b.$order || 0;\n        return a_order - b_order;\n      });\n    } // render optgroup headers & join groups\n\n\n    html = document.createDocumentFragment();\n    iterate$1(groups_order, optgroup => {\n      let group_fragment = groups[optgroup];\n      if (!group_fragment || !group_fragment.children.length) return;\n      let group_heading = self.optgroups[optgroup];\n\n      if (group_heading !== undefined) {\n        let group_options = document.createDocumentFragment();\n        let header = self.render('optgroup_header', group_heading);\n        append(group_options, header);\n        append(group_options, group_fragment);\n        let group_html = self.render('optgroup', {\n          group: group_heading,\n          options: group_options\n        });\n        append(html, group_html);\n      } else {\n        append(html, group_fragment);\n      }\n    });\n    dropdown_content.innerHTML = '';\n    append(dropdown_content, html); // highlight matching terms inline\n\n    if (self.settings.highlight) {\n      removeHighlight(dropdown_content);\n\n      if (results.query.length && results.tokens.length) {\n        iterate$1(results.tokens, tok => {\n          highlight(dropdown_content, tok.regex);\n        });\n      }\n    } // helper method for adding templates to dropdown\n\n\n    var add_template = template => {\n      let content = self.render(template, {\n        input: query\n      });\n\n      if (content) {\n        show_dropdown = true;\n        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n      }\n\n      return content;\n    }; // add loading message\n\n\n    if (self.loading) {\n      add_template('loading'); // invalid query\n    } else if (!self.settings.shouldLoad.call(self, query)) {\n      add_template('not_loading'); // add no_results message\n    } else if (results.items.length === 0) {\n      add_template('no_results');\n    } // add create option\n\n\n    has_create_option = self.canCreate(query);\n\n    if (has_create_option) {\n      create = add_template('option_create');\n    } // activate\n\n\n    self.hasOptions = results.items.length > 0 || has_create_option;\n\n    if (show_dropdown) {\n      if (results.items.length > 0) {\n        if (!active_option && self.settings.mode === 'single' && self.items[0] != undefined) {\n          active_option = self.getOption(self.items[0]);\n        }\n\n        if (!dropdown_content.contains(active_option)) {\n          let active_index = 0;\n\n          if (create && !self.settings.addPrecedence) {\n            active_index = 1;\n          }\n\n          active_option = self.selectable()[active_index];\n        }\n      } else if (create) {\n        active_option = create;\n      }\n\n      if (triggerDropdown && !self.isOpen) {\n        self.open();\n        self.scrollToOption(active_option, 'auto');\n      }\n\n      self.setActiveOption(active_option);\n    } else {\n      self.clearActiveOption();\n\n      if (triggerDropdown && self.isOpen) {\n        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n      }\n    }\n  }\n  /**\n   * Return list of selectable options\n   *\n   */\n\n\n  selectable() {\n    return this.dropdown_content.querySelectorAll('[data-selectable]');\n  }\n  /**\n   * Adds an available option. If it already exists,\n   * nothing will happen. Note: this does not refresh\n   * the options list dropdown (use `refreshOptions`\n   * for that).\n   *\n   * Usage:\n   *\n   *   this.addOption(data)\n   *\n   */\n\n\n  addOption(data, user_created = false) {\n    const self = this; // @deprecated 1.7.7\n    // use addOptions( array, user_created ) for adding multiple options\n\n    if (Array.isArray(data)) {\n      self.addOptions(data, user_created);\n      return false;\n    }\n\n    const key = hash_key(data[self.settings.valueField]);\n\n    if (key === null || self.options.hasOwnProperty(key)) {\n      return false;\n    }\n\n    data.$order = data.$order || ++self.order;\n    data.$id = self.inputId + '-opt-' + data.$order;\n    self.options[key] = data;\n    self.lastQuery = null;\n\n    if (user_created) {\n      self.userOptions[key] = user_created;\n      self.trigger('option_add', key, data);\n    }\n\n    return key;\n  }\n  /**\n   * Add multiple options\n   *\n   */\n\n\n  addOptions(data, user_created = false) {\n    iterate$1(data, dat => {\n      this.addOption(dat, user_created);\n    });\n  }\n  /**\n   * @deprecated 1.7.7\n   */\n\n\n  registerOption(data) {\n    return this.addOption(data);\n  }\n  /**\n   * Registers an option group to the pool of option groups.\n   *\n   * @return {boolean|string}\n   */\n\n\n  registerOptionGroup(data) {\n    var key = hash_key(data[this.settings.optgroupValueField]);\n    if (key === null) return false;\n    data.$order = data.$order || ++this.order;\n    this.optgroups[key] = data;\n    return key;\n  }\n  /**\n   * Registers a new optgroup for options\n   * to be bucketed into.\n   *\n   */\n\n\n  addOptionGroup(id, data) {\n    var hashed_id;\n    data[this.settings.optgroupValueField] = id;\n\n    if (hashed_id = this.registerOptionGroup(data)) {\n      this.trigger('optgroup_add', hashed_id, data);\n    }\n  }\n  /**\n   * Removes an existing option group.\n   *\n   */\n\n\n  removeOptionGroup(id) {\n    if (this.optgroups.hasOwnProperty(id)) {\n      delete this.optgroups[id];\n      this.clearCache();\n      this.trigger('optgroup_remove', id);\n    }\n  }\n  /**\n   * Clears all existing option groups.\n   */\n\n\n  clearOptionGroups() {\n    this.optgroups = {};\n    this.clearCache();\n    this.trigger('optgroup_clear');\n  }\n  /**\n   * Updates an option available for selection. If\n   * it is visible in the selected items or options\n   * dropdown, it will be re-rendered automatically.\n   *\n   */\n\n\n  updateOption(value, data) {\n    const self = this;\n    var item_new;\n    var index_item;\n    const value_old = hash_key(value);\n    const value_new = hash_key(data[self.settings.valueField]); // sanity checks\n\n    if (value_old === null) return;\n    const data_old = self.options[value_old];\n    if (data_old == undefined) return;\n    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n    const option = self.getOption(value_old);\n    const item = self.getItem(value_old);\n    data.$order = data.$order || data_old.$order;\n    delete self.options[value_old]; // invalidate render cache\n    // don't remove existing node yet, we'll remove it after replacing it\n\n    self.uncacheValue(value_new);\n    self.options[value_new] = data; // update the option if it's in the dropdown\n\n    if (option) {\n      if (self.dropdown_content.contains(option)) {\n        const option_new = self._render('option', data);\n\n        replaceNode(option, option_new);\n\n        if (self.activeOption === option) {\n          self.setActiveOption(option_new);\n        }\n      }\n\n      option.remove();\n    } // update the item if we have one\n\n\n    if (item) {\n      index_item = self.items.indexOf(value_old);\n\n      if (index_item !== -1) {\n        self.items.splice(index_item, 1, value_new);\n      }\n\n      item_new = self._render('item', data);\n      if (item.classList.contains('active')) addClasses(item_new, 'active');\n      replaceNode(item, item_new);\n    } // invalidate last query because we might have updated the sortField\n\n\n    self.lastQuery = null;\n  }\n  /**\n   * Removes a single option.\n   *\n   */\n\n\n  removeOption(value, silent) {\n    const self = this;\n    value = get_hash(value);\n    self.uncacheValue(value);\n    delete self.userOptions[value];\n    delete self.options[value];\n    self.lastQuery = null;\n    self.trigger('option_remove', value);\n    self.removeItem(value, silent);\n  }\n  /**\n   * Clears all options.\n   */\n\n\n  clearOptions(filter) {\n    const boundFilter = (filter || this.clearFilter).bind(this);\n    this.loadedSearches = {};\n    this.userOptions = {};\n    this.clearCache();\n    const selected = {};\n    iterate$1(this.options, (option, key) => {\n      if (boundFilter(option, key)) {\n        selected[key] = option;\n      }\n    });\n    this.options = this.sifter.items = selected;\n    this.lastQuery = null;\n    this.trigger('option_clear');\n  }\n  /**\n   * Used by clearOptions() to decide whether or not an option should be removed\n   * Return true to keep an option, false to remove\n   *\n   */\n\n\n  clearFilter(option, value) {\n    if (this.items.indexOf(value) >= 0) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Returns the dom element of the option\n   * matching the given value.\n   *\n   */\n\n\n  getOption(value, create = false) {\n    const hashed = hash_key(value);\n    if (hashed === null) return null;\n    const option = this.options[hashed];\n\n    if (option != undefined) {\n      if (option.$div) {\n        return option.$div;\n      }\n\n      if (create) {\n        return this._render('option', option);\n      }\n    }\n\n    return null;\n  }\n  /**\n   * Returns the dom element of the next or previous dom element of the same type\n   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n   *\n   */\n\n\n  getAdjacent(option, direction, type = 'option') {\n    var self = this,\n        all;\n\n    if (!option) {\n      return null;\n    }\n\n    if (type == 'item') {\n      all = self.controlChildren();\n    } else {\n      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n    }\n\n    for (let i = 0; i < all.length; i++) {\n      if (all[i] != option) {\n        continue;\n      }\n\n      if (direction > 0) {\n        return all[i + 1];\n      }\n\n      return all[i - 1];\n    }\n\n    return null;\n  }\n  /**\n   * Returns the dom element of the item\n   * matching the given value.\n   *\n   */\n\n\n  getItem(item) {\n    if (typeof item == 'object') {\n      return item;\n    }\n\n    var value = hash_key(item);\n    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n  }\n  /**\n   * \"Selects\" multiple items at once. Adds them to the list\n   * at the current caret position.\n   *\n   */\n\n\n  addItems(values, silent) {\n    var self = this;\n    var items = Array.isArray(values) ? values : [values];\n    items = items.filter(x => self.items.indexOf(x) === -1);\n    const last_item = items[items.length - 1];\n    items.forEach(item => {\n      self.isPending = item !== last_item;\n      self.addItem(item, silent);\n    });\n  }\n  /**\n   * \"Selects\" an item. Adds it to the list\n   * at the current caret position.\n   *\n   */\n\n\n  addItem(value, silent) {\n    var events = silent ? [] : ['change', 'dropdown_close'];\n    debounce_events(this, events, () => {\n      var item, wasFull;\n      const self = this;\n      const inputMode = self.settings.mode;\n      const hashed = hash_key(value);\n\n      if (hashed && self.items.indexOf(hashed) !== -1) {\n        if (inputMode === 'single') {\n          self.close();\n        }\n\n        if (inputMode === 'single' || !self.settings.duplicates) {\n          return;\n        }\n      }\n\n      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n      if (inputMode === 'single') self.clear(silent);\n      if (inputMode === 'multi' && self.isFull()) return;\n      item = self._render('item', self.options[hashed]);\n\n      if (self.control.contains(item)) {\n        // duplicates\n        item = item.cloneNode(true);\n      }\n\n      wasFull = self.isFull();\n      self.items.splice(self.caretPos, 0, hashed);\n      self.insertAtCaret(item);\n\n      if (self.isSetup) {\n        // update menu / remove the option (if this is not one item being added as part of series)\n        if (!self.isPending && self.settings.hideSelected) {\n          let option = self.getOption(hashed);\n          let next = self.getAdjacent(option, 1);\n\n          if (next) {\n            self.setActiveOption(next);\n          }\n        } // refreshOptions after setActiveOption(),\n        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\n\n        if (!self.isPending && !self.settings.closeAfterSelect) {\n          self.refreshOptions(self.isFocused && inputMode !== 'single');\n        } // hide the menu if the maximum number of items have been selected or no options are left\n\n\n        if (self.settings.closeAfterSelect != false && self.isFull()) {\n          self.close();\n        } else if (!self.isPending) {\n          self.positionDropdown();\n        }\n\n        self.trigger('item_add', hashed, item);\n\n        if (!self.isPending) {\n          self.updateOriginalInput({\n            silent: silent\n          });\n        }\n      }\n\n      if (!self.isPending || !wasFull && self.isFull()) {\n        self.inputState();\n        self.refreshState();\n      }\n    });\n  }\n  /**\n   * Removes the selected item matching\n   * the provided value.\n   *\n   */\n\n\n  removeItem(item = null, silent) {\n    const self = this;\n    item = self.getItem(item);\n    if (!item) return;\n    var i, idx;\n    const value = item.dataset.value;\n    i = nodeIndex(item);\n    item.remove();\n\n    if (item.classList.contains('active')) {\n      idx = self.activeItems.indexOf(item);\n      self.activeItems.splice(idx, 1);\n      removeClasses(item, 'active');\n    }\n\n    self.items.splice(i, 1);\n    self.lastQuery = null;\n\n    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n      self.removeOption(value, silent);\n    }\n\n    if (i < self.caretPos) {\n      self.setCaret(self.caretPos - 1);\n    }\n\n    self.updateOriginalInput({\n      silent: silent\n    });\n    self.refreshState();\n    self.positionDropdown();\n    self.trigger('item_remove', value, item);\n  }\n  /**\n   * Invokes the `create` method provided in the\n   * TomSelect options that should provide the data\n   * for the new item, given the user input.\n   *\n   * Once this completes, it will be added\n   * to the item list.\n   *\n   */\n\n\n  createItem(input = null, callback = () => {}) {\n    // triggerDropdown parameter @deprecated 2.1.1\n    if (arguments.length === 3) {\n      callback = arguments[2];\n    }\n\n    if (typeof callback != 'function') {\n      callback = () => {};\n    }\n\n    var self = this;\n    var caret = self.caretPos;\n    var output;\n    input = input || self.inputValue();\n\n    if (!self.canCreate(input)) {\n      callback();\n      return false;\n    }\n\n    self.lock();\n    var created = false;\n\n    var create = data => {\n      self.unlock();\n      if (!data || typeof data !== 'object') return callback();\n      var value = hash_key(data[self.settings.valueField]);\n\n      if (typeof value !== 'string') {\n        return callback();\n      }\n\n      self.setTextboxValue();\n      self.addOption(data, true);\n      self.setCaret(caret);\n      self.addItem(value);\n      callback(data);\n      created = true;\n    };\n\n    if (typeof self.settings.create === 'function') {\n      output = self.settings.create.call(this, input, create);\n    } else {\n      output = {\n        [self.settings.labelField]: input,\n        [self.settings.valueField]: input\n      };\n    }\n\n    if (!created) {\n      create(output);\n    }\n\n    return true;\n  }\n  /**\n   * Re-renders the selected item lists.\n   */\n\n\n  refreshItems() {\n    var self = this;\n    self.lastQuery = null;\n\n    if (self.isSetup) {\n      self.addItems(self.items);\n    }\n\n    self.updateOriginalInput();\n    self.refreshState();\n  }\n  /**\n   * Updates all state-dependent attributes\n   * and CSS classes.\n   */\n\n\n  refreshState() {\n    const self = this;\n    self.refreshValidityState();\n    const isFull = self.isFull();\n    const isLocked = self.isLocked;\n    self.wrapper.classList.toggle('rtl', self.rtl);\n    const wrap_classList = self.wrapper.classList;\n    wrap_classList.toggle('focus', self.isFocused);\n    wrap_classList.toggle('disabled', self.isDisabled);\n    wrap_classList.toggle('required', self.isRequired);\n    wrap_classList.toggle('invalid', !self.isValid);\n    wrap_classList.toggle('locked', isLocked);\n    wrap_classList.toggle('full', isFull);\n    wrap_classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n    wrap_classList.toggle('dropdown-active', self.isOpen);\n    wrap_classList.toggle('has-options', isEmptyObject(self.options));\n    wrap_classList.toggle('has-items', self.items.length > 0);\n  }\n  /**\n   * Update the `required` attribute of both input and control input.\n   *\n   * The `required` property needs to be activated on the control input\n   * for the error to be displayed at the right place. `required` also\n   * needs to be temporarily deactivated on the input since the input is\n   * hidden and can't show errors.\n   */\n\n\n  refreshValidityState() {\n    var self = this;\n\n    if (!self.input.validity) {\n      return;\n    }\n\n    self.isValid = self.input.validity.valid;\n    self.isInvalid = !self.isValid;\n  }\n  /**\n   * Determines whether or not more items can be added\n   * to the control without exceeding the user-defined maximum.\n   *\n   * @returns {boolean}\n   */\n\n\n  isFull() {\n    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n  }\n  /**\n   * Refreshes the original <select> or <input>\n   * element to reflect the current state.\n   *\n   */\n\n\n  updateOriginalInput(opts = {}) {\n    const self = this;\n    var option, label;\n    const empty_option = self.input.querySelector('option[value=\"\"]');\n\n    if (self.is_select_tag) {\n      const selected = [];\n      const has_selected = self.input.querySelectorAll('option:checked').length;\n\n      function AddSelected(option_el, value, label) {\n        if (!option_el) {\n          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n        } // don't move empty option from top of list\n        // fixes bug in firefox https://bugzilla.mozilla.org/show_bug.cgi?id=1725293\n\n\n        if (option_el != empty_option) {\n          self.input.append(option_el);\n        }\n\n        selected.push(option_el); // marking empty option as selected can break validation\n        // fixes https://github.com/orchidjs/tom-select/issues/303\n\n        if (option_el != empty_option || has_selected > 0) {\n          option_el.selected = true;\n        }\n\n        return option_el;\n      } // unselect all selected options\n\n\n      self.input.querySelectorAll('option:checked').forEach(option_el => {\n        option_el.selected = false;\n      }); // nothing selected?\n\n      if (self.items.length == 0 && self.settings.mode == 'single') {\n        AddSelected(empty_option, \"\", \"\"); // order selected <option> tags for values in self.items\n      } else {\n        self.items.forEach(value => {\n          option = self.options[value];\n          label = option[self.settings.labelField] || '';\n\n          if (selected.includes(option.$option)) {\n            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not(:checked)`);\n            AddSelected(reuse_opt, value, label);\n          } else {\n            option.$option = AddSelected(option.$option, value, label);\n          }\n        });\n      }\n    } else {\n      self.input.value = self.getValue();\n    }\n\n    if (self.isSetup) {\n      if (!opts.silent) {\n        self.trigger('change', self.getValue());\n      }\n    }\n  }\n  /**\n   * Shows the autocomplete dropdown containing\n   * the available options.\n   */\n\n\n  open() {\n    var self = this;\n    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n    self.isOpen = true;\n    setAttr(self.focus_node, {\n      'aria-expanded': 'true'\n    });\n    self.refreshState();\n    applyCSS(self.dropdown, {\n      visibility: 'hidden',\n      display: 'block'\n    });\n    self.positionDropdown();\n    applyCSS(self.dropdown, {\n      visibility: 'visible',\n      display: 'block'\n    });\n    self.focus();\n    self.trigger('dropdown_open', self.dropdown);\n  }\n  /**\n   * Closes the autocomplete dropdown menu.\n   */\n\n\n  close(setTextboxValue = true) {\n    var self = this;\n    var trigger = self.isOpen;\n\n    if (setTextboxValue) {\n      // before blur() to prevent form onchange event\n      self.setTextboxValue();\n\n      if (self.settings.mode === 'single' && self.items.length) {\n        self.hideInput();\n      }\n    }\n\n    self.isOpen = false;\n    setAttr(self.focus_node, {\n      'aria-expanded': 'false'\n    });\n    applyCSS(self.dropdown, {\n      display: 'none'\n    });\n\n    if (self.settings.hideSelected) {\n      self.clearActiveOption();\n    }\n\n    self.refreshState();\n    if (trigger) self.trigger('dropdown_close', self.dropdown);\n  }\n  /**\n   * Calculates and applies the appropriate\n   * position of the dropdown if dropdownParent = 'body'.\n   * Otherwise, position is determined by css\n   */\n\n\n  positionDropdown() {\n    if (this.settings.dropdownParent !== 'body') {\n      return;\n    }\n\n    var context = this.control;\n    var rect = context.getBoundingClientRect();\n    var top = context.offsetHeight + rect.top + window.scrollY;\n    var left = rect.left + window.scrollX;\n    applyCSS(this.dropdown, {\n      width: rect.width + 'px',\n      top: top + 'px',\n      left: left + 'px'\n    });\n  }\n  /**\n   * Resets / clears all selected items\n   * from the control.\n   *\n   */\n\n\n  clear(silent) {\n    var self = this;\n    if (!self.items.length) return;\n    var items = self.controlChildren();\n    iterate$1(items, item => {\n      self.removeItem(item, true);\n    });\n    self.showInput();\n    if (!silent) self.updateOriginalInput();\n    self.trigger('clear');\n  }\n  /**\n   * A helper method for inserting an element\n   * at the current caret position.\n   *\n   */\n\n\n  insertAtCaret(el) {\n    const self = this;\n    const caret = self.caretPos;\n    const target = self.control;\n    target.insertBefore(el, target.children[caret] || null);\n    self.setCaret(caret + 1);\n  }\n  /**\n   * Removes the current selected item(s).\n   *\n   */\n\n\n  deleteSelection(e) {\n    var direction, selection, caret, tail;\n    var self = this;\n    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n    selection = getSelection(self.control_input); // determine items that will be removed\n\n    const rm_items = [];\n\n    if (self.activeItems.length) {\n      tail = getTail(self.activeItems, direction);\n      caret = nodeIndex(tail);\n\n      if (direction > 0) {\n        caret++;\n      }\n\n      iterate$1(self.activeItems, item => rm_items.push(item));\n    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n      const items = self.controlChildren();\n      let rm_item;\n\n      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n        rm_item = items[self.caretPos - 1];\n      } else if (direction > 0 && selection.start === self.inputValue().length) {\n        rm_item = items[self.caretPos];\n      }\n\n      if (rm_item !== undefined) {\n        rm_items.push(rm_item);\n      }\n    }\n\n    if (!self.shouldDelete(rm_items, e)) {\n      return false;\n    }\n\n    preventDefault(e, true); // perform removal\n\n    if (typeof caret !== 'undefined') {\n      self.setCaret(caret);\n    }\n\n    while (rm_items.length) {\n      self.removeItem(rm_items.pop());\n    }\n\n    self.showInput();\n    self.positionDropdown();\n    self.refreshOptions(false);\n    return true;\n  }\n  /**\n   * Return true if the items should be deleted\n   */\n\n\n  shouldDelete(items, evt) {\n    const values = items.map(item => item.dataset.value); // allow the callback to abort\n\n    if (!values.length || typeof this.settings.onDelete === 'function' && this.settings.onDelete(values, evt) === false) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Selects the previous / next item (depending on the `direction` argument).\n   *\n   * > 0 - right\n   * < 0 - left\n   *\n   */\n\n\n  advanceSelection(direction, e) {\n    var last_active,\n        adjacent,\n        self = this;\n    if (self.rtl) direction *= -1;\n    if (self.inputValue().length) return; // add or remove to active items\n\n    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n      last_active = self.getLastActive(direction);\n\n      if (last_active) {\n        if (!last_active.classList.contains('active')) {\n          adjacent = last_active;\n        } else {\n          adjacent = self.getAdjacent(last_active, direction, 'item');\n        } // if no active item, get items adjacent to the control input\n\n      } else if (direction > 0) {\n        adjacent = self.control_input.nextElementSibling;\n      } else {\n        adjacent = self.control_input.previousElementSibling;\n      }\n\n      if (adjacent) {\n        if (adjacent.classList.contains('active')) {\n          self.removeActiveItem(last_active);\n        }\n\n        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n      } // move caret to the left or right\n\n    } else {\n      self.moveCaret(direction);\n    }\n  }\n\n  moveCaret(direction) {}\n  /**\n   * Get the last active item\n   *\n   */\n\n\n  getLastActive(direction) {\n    let last_active = this.control.querySelector('.last-active');\n\n    if (last_active) {\n      return last_active;\n    }\n\n    var result = this.control.querySelectorAll('.active');\n\n    if (result) {\n      return getTail(result, direction);\n    }\n  }\n  /**\n   * Moves the caret to the specified index.\n   *\n   * The input must be moved by leaving it in place and moving the\n   * siblings, due to the fact that focus cannot be restored once lost\n   * on mobile webkit devices\n   *\n   */\n\n\n  setCaret(new_pos) {\n    this.caretPos = this.items.length;\n  }\n  /**\n   * Return list of item dom elements\n   *\n   */\n\n\n  controlChildren() {\n    return Array.from(this.control.querySelectorAll('[data-ts-item]'));\n  }\n  /**\n   * Disables user input on the control. Used while\n   * items are being asynchronously created.\n   */\n\n\n  lock() {\n    this.isLocked = true;\n    this.refreshState();\n  }\n  /**\n   * Re-enables user input on the control.\n   */\n\n\n  unlock() {\n    this.isLocked = false;\n    this.refreshState();\n  }\n  /**\n   * Disables user input on the control completely.\n   * While disabled, it cannot receive focus.\n   */\n\n\n  disable() {\n    var self = this;\n    self.input.disabled = true;\n    self.control_input.disabled = true;\n    self.focus_node.tabIndex = -1;\n    self.isDisabled = true;\n    this.close();\n    self.lock();\n  }\n  /**\n   * Enables the control so that it can respond\n   * to focus and user input.\n   */\n\n\n  enable() {\n    var self = this;\n    self.input.disabled = false;\n    self.control_input.disabled = false;\n    self.focus_node.tabIndex = self.tabIndex;\n    self.isDisabled = false;\n    self.unlock();\n  }\n  /**\n   * Completely destroys the control and\n   * unbinds all event listeners so that it can\n   * be garbage collected.\n   */\n\n\n  destroy() {\n    var self = this;\n    var revertSettings = self.revertSettings;\n    self.trigger('destroy');\n    self.off();\n    self.wrapper.remove();\n    self.dropdown.remove();\n    self.input.innerHTML = revertSettings.innerHTML;\n    self.input.tabIndex = revertSettings.tabIndex;\n    removeClasses(self.input, 'tomselected', 'ts-hidden-accessible');\n\n    self._destroy();\n\n    delete self.input.tomselect;\n  }\n  /**\n   * A helper method for rendering \"item\" and\n   * \"option\" templates, given the data.\n   *\n   */\n\n\n  render(templateName, data) {\n    var id, html;\n    const self = this;\n\n    if (typeof this.settings.render[templateName] !== 'function') {\n      return null;\n    } // render markup\n\n\n    html = self.settings.render[templateName].call(this, data, escape_html);\n\n    if (!html) {\n      return null;\n    }\n\n    html = getDom(html); // add mandatory attributes\n\n    if (templateName === 'option' || templateName === 'option_create') {\n      if (data[self.settings.disabledField]) {\n        setAttr(html, {\n          'aria-disabled': 'true'\n        });\n      } else {\n        setAttr(html, {\n          'data-selectable': ''\n        });\n      }\n    } else if (templateName === 'optgroup') {\n      id = data.group[self.settings.optgroupValueField];\n      setAttr(html, {\n        'data-group': id\n      });\n\n      if (data.group[self.settings.disabledField]) {\n        setAttr(html, {\n          'data-disabled': ''\n        });\n      }\n    }\n\n    if (templateName === 'option' || templateName === 'item') {\n      const value = get_hash(data[self.settings.valueField]);\n      setAttr(html, {\n        'data-value': value\n      }); // make sure we have some classes if a template is overwritten\n\n      if (templateName === 'item') {\n        addClasses(html, self.settings.itemClass);\n        setAttr(html, {\n          'data-ts-item': ''\n        });\n      } else {\n        addClasses(html, self.settings.optionClass);\n        setAttr(html, {\n          role: 'option',\n          id: data.$id\n        }); // update cache\n\n        data.$div = html;\n        self.options[value] = data;\n      }\n    }\n\n    return html;\n  }\n  /**\n   * Type guarded rendering\n   *\n   */\n\n\n  _render(templateName, data) {\n    const html = this.render(templateName, data);\n\n    if (html == null) {\n      throw 'HTMLElement expected';\n    }\n\n    return html;\n  }\n  /**\n   * Clears the render cache for a template. If\n   * no template is given, clears all render\n   * caches.\n   *\n   */\n\n\n  clearCache() {\n    iterate$1(this.options, option => {\n      if (option.$div) {\n        option.$div.remove();\n        delete option.$div;\n      }\n    });\n  }\n  /**\n   * Removes a value from item and option caches\n   *\n   */\n\n\n  uncacheValue(value) {\n    const option_el = this.getOption(value);\n    if (option_el) option_el.remove();\n  }\n  /**\n   * Determines whether or not to display the\n   * create item prompt, given a user input.\n   *\n   */\n\n\n  canCreate(input) {\n    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n  }\n  /**\n   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n   *\n   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n   *\n   * });\n   */\n\n\n  hook(when, method, new_fn) {\n    var self = this;\n    var orig_method = self[method];\n\n    self[method] = function () {\n      var result, result_new;\n\n      if (when === 'after') {\n        result = orig_method.apply(self, arguments);\n      }\n\n      result_new = new_fn.apply(self, arguments);\n\n      if (when === 'instead') {\n        return result_new;\n      }\n\n      if (when === 'before') {\n        result = orig_method.apply(self, arguments);\n      }\n\n      return result;\n    };\n  }\n\n}\n\n/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nfunction caret_position () {\n  var self = this;\n  /**\n   * Moves the caret to the specified index.\n   *\n   * The input must be moved by leaving it in place and moving the\n   * siblings, due to the fact that focus cannot be restored once lost\n   * on mobile webkit devices\n   *\n   */\n\n  self.hook('instead', 'setCaret', new_pos => {\n    if (self.settings.mode === 'single' || !self.control.contains(self.control_input)) {\n      new_pos = self.items.length;\n    } else {\n      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n      if (new_pos != self.caretPos && !self.isPending) {\n        self.controlChildren().forEach((child, j) => {\n          if (j < new_pos) {\n            self.control_input.insertAdjacentElement('beforebegin', child);\n          } else {\n            self.control.appendChild(child);\n          }\n        });\n      }\n    }\n\n    self.caretPos = new_pos;\n  });\n  self.hook('instead', 'moveCaret', direction => {\n    if (!self.isFocused) return; // move caret before or after selected items\n\n    const last_active = self.getLastActive(direction);\n\n    if (last_active) {\n      const idx = nodeIndex(last_active);\n      self.setCaret(direction > 0 ? idx + 1 : idx);\n      self.setActiveItem();\n      removeClasses(last_active, 'last-active'); // move caret left or right of current position\n    } else {\n      self.setCaret(self.caretPos + direction);\n    }\n  });\n}\n\n/**\n * Plugin: \"dropdown_input\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nfunction dropdown_input () {\n  const self = this;\n  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n  self.hook('before', 'setup', () => {\n    self.focus_node = self.control;\n    addClasses(self.control_input, 'dropdown-input');\n    const div = getDom('<div class=\"dropdown-input-wrap\">');\n    div.append(self.control_input);\n    self.dropdown.insertBefore(div, self.dropdown.firstChild); // set a placeholder in the select control\n\n    const placeholder = getDom('<input class=\"items-placeholder\" tabindex=\"-1\" />');\n    placeholder.placeholder = self.settings.placeholder || '';\n    self.control.append(placeholder);\n  });\n  self.on('initialize', () => {\n    // set tabIndex on control to -1, otherwise [shift+tab] will put focus right back on control_input\n    self.control_input.addEventListener('keydown', evt => {\n      //addEvent(self.control_input,'keydown' as const,(evt:KeyboardEvent) =>{\n      switch (evt.keyCode) {\n        case KEY_ESC:\n          if (self.isOpen) {\n            preventDefault(evt, true);\n            self.close();\n          }\n\n          self.clearActiveItems();\n          return;\n\n        case KEY_TAB:\n          self.focus_node.tabIndex = -1;\n          break;\n      }\n\n      return self.onKeyDown.call(self, evt);\n    });\n    self.on('blur', () => {\n      self.focus_node.tabIndex = self.isDisabled ? -1 : self.tabIndex;\n    }); // give the control_input focus when the dropdown is open\n\n    self.on('dropdown_open', () => {\n      self.control_input.focus();\n    }); // prevent onBlur from closing when focus is on the control_input\n\n    const orig_onBlur = self.onBlur;\n    self.hook('instead', 'onBlur', evt => {\n      if (evt && evt.relatedTarget == self.control_input) return;\n      return orig_onBlur.call(self);\n    });\n    addEvent(self.control_input, 'blur', () => self.onBlur()); // return focus to control to allow further keyboard input\n\n    self.hook('before', 'close', () => {\n      if (!self.isOpen) return;\n      self.focus_node.focus({\n        preventScroll: true\n      });\n    });\n  });\n}\n\n/**\n * Plugin: \"input_autogrow\" (Tom Select)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nfunction no_backspace_delete () {\n  var self = this;\n  var orig_deleteSelection = self.deleteSelection;\n  this.hook('instead', 'deleteSelection', evt => {\n    if (self.activeItems.length) {\n      return orig_deleteSelection.call(self, evt);\n    }\n\n    return false;\n  });\n}\n\n/**\n * Plugin: \"remove_button\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nfunction remove_button (userOptions) {\n  const options = Object.assign({\n    label: '&times;',\n    title: 'Remove',\n    className: 'remove',\n    append: true\n  }, userOptions); //options.className = 'remove-single';\n\n  var self = this; // override the render method to add remove button to each item\n\n  if (!options.append) {\n    return;\n  }\n\n  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n  self.hook('after', 'setupTemplates', () => {\n    var orig_render_item = self.settings.render.item;\n\n    self.settings.render.item = (data, escape) => {\n      var item = getDom(orig_render_item.call(self, data, escape));\n      var close_button = getDom(html);\n      item.appendChild(close_button);\n      addEvent(close_button, 'mousedown', evt => {\n        preventDefault(evt, true);\n      });\n      addEvent(close_button, 'click', evt => {\n        // propagating will trigger the dropdown to show for single mode\n        preventDefault(evt, true);\n        if (self.isLocked) return;\n        if (!self.shouldDelete([item], evt)) return;\n        self.removeItem(item);\n        self.refreshOptions(false);\n        self.inputState();\n      });\n      return item;\n    };\n  });\n}\n\n/**\n * Plugin: \"restore_on_backspace\" (Tom Select)\n * Copyright (c) contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n * file except in compliance with the License. You may obtain a copy of the License at:\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n * ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n *\n */\nfunction restore_on_backspace (userOptions) {\n  const self = this;\n  const options = Object.assign({\n    text: option => {\n      return option[self.settings.labelField];\n    }\n  }, userOptions);\n  self.on('item_remove', function (value) {\n    if (!self.isFocused) {\n      return;\n    }\n\n    if (self.control_input.value.trim() === '') {\n      var option = self.options[value];\n\n      if (option) {\n        self.setTextboxValue(options.text.call(self, option));\n      }\n    }\n  });\n}\n\nTomSelect.define('caret_position', caret_position);\nTomSelect.define('dropdown_input', dropdown_input);\nTomSelect.define('no_backspace_delete', no_backspace_delete);\nTomSelect.define('remove_button', remove_button);\nTomSelect.define('restore_on_backspace', restore_on_backspace);\n\nmodule.exports = TomSelect;\n//# sourceMappingURL=tom-select.popular.js.map\n","var map = {\n\t\"./decidim/gamification/badges/decidim_gamification_badges_accepted_proposals.svg\": 36751,\n\t\"./decidim/gamification/badges/decidim_gamification_badges_proposal_votes.svg\": 70164,\n\t\"./decidim/gamification/badges/decidim_gamification_badges_proposals.svg\": 4801,\n\t\"./decidim/proposals/decidim_proposals.svg\": 44921,\n\t\"./decidim/proposals/proposal-placeholder-card-g.svg\": 79133\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61012;","$(() => {\n  $(\"#vote_button\").mouseover(function() {\n    $(this).text($(this).data(\"replace\"));\n  });\n  $(\"#vote_button\").mouseout(function() {\n    $(this).text($(this).data(\"original\"));\n  });\n});\n","const allowExitFrom = (el) => {\n  if (el.id === \"exit-proposal-notification-link\" || el.classList.contains(\"no-modal\")) {\n    return true;\n  }\n  return false;\n};\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const exitNotification = document.getElementById(\"exit-proposal-notification\");\n  const exitLink = document.getElementById(\"exit-proposal-notification-link\");\n  if (!exitLink) {\n    return;\n  }\n  const defaultExitUrl = exitLink.href;\n  const defaultExitLinkText = exitLink.textContent;\n  const signOutPath = window.Decidim.config.get(\"sign_out_path\");\n  let exitLinkText = defaultExitLinkText;\n  if (!exitNotification) {\n    return;\n  }\n  const openExitNotification = (url, method = null) => {\n    if (method && method !== \"get\") {\n      exitLink.setAttribute(\"data-method\", method);\n    } else {\n      exitLink.removeAttribute(\"data-method\");\n    }\n    exitLink.setAttribute(\"href\", url);\n    exitLink.textContent = exitLinkText;\n    window.Decidim.currentDialogs[\"exit-proposal-notification\"].open();\n  };\n  const handleClicks = (link) => {\n    link.addEventListener(\"click\", (event) => {\n      exitLinkText = defaultExitLinkText;\n      if (!allowExitFrom(link) && window.Decidim.currentDialogs[\"exit-proposal-notification\"].dialog.querySelector(\"[data-dialog-container]\").dataset.minimumVotesReached !== \"true\" && window.Decidim.currentDialogs[\"exit-proposal-notification\"].dialog.querySelector(\"[data-dialog-container]\").dataset.minimumVotesCount > 0) {\n        event.preventDefault();\n        openExitNotification(link.getAttribute(\"href\"), link.dataset.method);\n      }\n    });\n  };\n  document.querySelectorAll(\"a\").forEach(handleClicks);\n  const signOutLink = document.querySelector(`[href='${signOutPath}']`);\n  if (signOutLink) {\n    signOutLink.addEventListener(\"click\", (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      exitLinkText = signOutLink.textContent;\n      openExitNotification(signOutLink.getAttribute(\"href\"), signOutLink.dataset.method);\n    });\n  }\n  const dialogOpenLinks = document.querySelectorAll(\"a[data-dialog-open='exit-proposal-notification']\");\n  dialogOpenLinks.forEach((link) => {\n    link.addEventListener(\"click\", () => {\n      exitLinkText = defaultExitLinkText;\n      openExitNotification(defaultExitUrl);\n    });\n  });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/decidim-packs/\";","export default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n  return coordinate;\n}\n","import getCoordinateInputName from \"src/decidim/geocoding/coordinate_input\";\nexport default function attachGeocoding($input, options, callback) {\n  const attachOptions = $.extend({}, options);\n  const inputIdParts = $input.attr(\"id\").split(\"_\");\n  inputIdParts.pop();\n  const idPrefix = `${inputIdParts.join(\"_\")}`;\n  let latitudeName = \"latitude\";\n  let longitudeName = \"longitude\";\n  if ($input.length > 0) {\n    latitudeName = getCoordinateInputName(\"latitude\", $input, attachOptions);\n    longitudeName = getCoordinateInputName(\"longitude\", $input, attachOptions);\n  }\n  const config = $.extend({\n    latitudeId: `${idPrefix}_latitude`,\n    longitudeId: `${idPrefix}_longitude`,\n    latitudeName,\n    longitudeName\n  }, options);\n  let geocoded = false;\n  const createCoordinateFields = () => {\n    let $latitude = $(`#${config.latitudeId}`);\n    if ($latitude.length < 1) {\n      $latitude = $(`<input type=\"hidden\" name=\"${config.latitudeName}\" id=\"${config.latitudeId}\" />`);\n      $input.after($latitude);\n    }\n    let $longitude = $(`#${config.longitudeId}`);\n    if ($longitude.length < 1) {\n      $longitude = $(`<input type=\"hidden\" name=\"${config.longitudeName}\" id=\"${config.longitudeId}\" />`);\n      $input.after($longitude);\n    }\n  };\n  const clearCoordinateFields = () => {\n    if (geocoded) {\n      return;\n    }\n    $(`#${config.latitudeId}`).val(\"\").removeAttr(\"value\");\n    $(`#${config.longitudeId}`).val(\"\").removeAttr(\"value\");\n  };\n  const setCoordinates = (coordinates2) => {\n    createCoordinateFields();\n    $(`#${config.latitudeId}`).val(coordinates2[0]).attr(\"value\", coordinates2[0]);\n    $(`#${config.longitudeId}`).val(coordinates2[1]).attr(\"value\", coordinates2[1]);\n  };\n  $input.on(\"change.decidim\", () => {\n    clearCoordinateFields();\n  });\n  $input.on(\"geocoder-suggest-coordinates.decidim\", (_ev, coordinates2) => {\n    setCoordinates(coordinates2);\n    geocoded = true;\n    if (typeof callback === \"function\") {\n      callback(coordinates2);\n      return;\n    }\n  });\n  const coordinates = `${$input.data(\"coordinates\")}`.split(\",\").map(parseFloat);\n  if (Array.isArray(coordinates) && coordinates.length === 2) {\n    setCoordinates(coordinates);\n  }\n}\n","import attachGeocoding from \"src/decidim/geocoding/attach_input\";\nimport getCoordinateInputName from \"src/decidim/geocoding/coordinate_input\";\n$(() => {\n  const $map = $(\"#address_map\");\n  const $addressInputField = $(\"[data-decidim-geocoding]\");\n  if ($map.length) {\n    if (!$addressInputField.data(\"coordinates\")) {\n      $map.hide();\n    }\n    $addressInputField.on(\"geocoder-suggest-coordinates.decidim\", () => $map.show());\n    const markerAddedAnnouncement = $addressInputField.data(\"screen-reader-announcement\");\n    let latFieldName = \"latitude\";\n    let longFieldName = \"longitude\";\n    if ($addressInputField.length > 0) {\n      latFieldName = getCoordinateInputName(\"latitude\", $addressInputField, {});\n      longFieldName = getCoordinateInputName(\"longitude\", $addressInputField, {});\n    }\n    $(\"[data-decidim-map]\").on(\"ready.decidim\", (event) => {\n      const ctrl = $(event.target).data(\"map-controller\");\n      ctrl.setEventHandler(\"coordinates\", (ev) => {\n        $(`input[name='${latFieldName}']`).val(ev.lat);\n        $(`input[name='${longFieldName}']`).val(ev.lng);\n      });\n      attachGeocoding($addressInputField, null, (coordinates) => {\n        ctrl.removeMarker();\n        ctrl.addMarker({\n          latitude: coordinates[0],\n          longitude: coordinates[1],\n          address: $addressInputField.val()\n        });\n        window.Decidim.announceForScreenReader(markerAddedAnnouncement);\n      });\n    });\n  }\n});\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nimport TomSelect from \"tom-select/dist/cjs/tom-select.popular\";\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const tagContainers = document.querySelectorAll(\"#proposals_list\");\n  tagContainers.forEach((container) => {\n    const { tmName, tmItems, tmNoResults } = container.dataset;\n    const config = {\n      plugins: [\"remove_button\", \"dropdown_input\"],\n      allowEmptyOption: true,\n      items: JSON.parse(tmItems),\n      render: __spreadValues({\n        item: (data, escape) => `<div>${escape(data.text)}<input type=\"hidden\" name=\"${tmName}[]\" value=\"${data.value}\" /></div>`\n      }, tmNoResults && { no_results: () => `<div class=\"no-results\">${tmNoResults}</div>` })\n    };\n    return new TomSelect(container, config);\n  });\n});\n","import \"src/decidim/proposals/utils\";\nimport \"src/decidim/proposals/add_proposal\";\nimport \"src/decidim/proposals/choose_proposals\";\nimport \"src/decidim/proposals/exit_handler\";\nrequire.context(\"../images\", true);\nrequire.context(\"../documents\", true);\nimport \"stylesheets/decidim/proposals/proposals.scss\";\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","module","forEvents","events","callback","event","MicroEvent","fct","event_array","n","args","self","MicroPlugin","Interface","name","fn","plugins","key","queue","plugin","arrayToPattern","chars","maxValueLength","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","escape_regex","str","longest","value","unicodeLength","p","allSubstrings","input","result","start","subresult","tmp","code_points","accent_pat","unicode_map","multi_char_reg","max_char_length","latin_convert","latin_condensed","latin","unicode","convert_pat","initialize","_code_points","generateMap","normalize","form","asciifold","_asciifold","generator","code_point_min","code_point_max","composed","folded","generateSets","unicode_sets","addMatching","to_add","folded_set","patt","multi_char","set","a","b","multi_char_patt","mapSequence","strings","min_replacement","chars_replaced","substringsToPattern","sub_pat","sequencesToPattern","sequences","all","sequence","seq","len","j","inSequences","needle_seq","needle_parts","filter","part","needle_part","Sequence","position","last_piece","clone","parts","last_part","last_substr","clone_last_len","getPattern","match","match_str","overlapping","added_types","new_seq","old_seq","getAttr","obj","getAttrNesting","names","scoreValue","token","weight","score","pos","propToArray","iterate$1","object","cmp","Sifter","items","settings","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","regex","options","search","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","implicit_score","sort_flds","sort","get_field","s","fld","sort_fld","optsUser","fn_score","item","_","fn_sort","iterate","getDom","isHtmlString","tpl","arg","escapeQuery","triggerEvent","dom_el","event_name","applyCSS","css","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","removeClasses","_classes","parentMatch","target","selector","wrapper","getTail","list","direction","isEmptyObject","nodeIndex","amongst","setAttr","attrs","val","attr","replaceNode","existing","replacement","highlight","element","highlightText","node","spannode","middlebit","middleclone","highlightChildren","highlightRecursive","removeHighlight","elements","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","defaults","hash_key","get_hash","escape_html","loadDebounce","delay","timeout","debounce_events","types","type","trigger","event_args","getSelection","preventDefault","evt","stop","addEvent","isKeyDown","key_name","count","getId","existing_id","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","placeholder","option","settings_element","init_select","tagName","optionsMap","group_count","readData","json","addOption","group","arr","option_data","addGroup","optgroup","optgroup_data","child","init_textbox","data_raw","opt","values","instance_i","TomSelect","input_arg","user_settings","dir","computedStyle","control","dropdown","dropdown_content","inputMode","control_input","focus_node","passive_event","listboxId","control_id","label","label_click","label_id","classes_plugins","target_match","doc_mousedown","win_scroll","optgroups","templates","escape","callbacks","get_settings","pastedText","splitInput","piece","character","next","prev","wasFocused","deactivate","classList","changed","silent","eventName","begin","end","swap","last","last_active","idx","scroll","behavior","content","height_menu","scrollTop","height_item","y","activeItems","calculateScore","hashed","triggerDropdown","k","html","has_create_option","active_group","create","groups","groups_order","same_query","results","active_option","show_dropdown","opt_value","opt_hash","option_el","group_fragment","grp_a","grp_b","a_order","b_order","group_heading","group_options","header","group_html","tok","add_template","template","active_index","user_created","dat","hashed_id","item_new","index_item","value_old","value_new","data_old","option_new","boundFilter","selected","x","last_item","wasFull","caret","output","created","isFull","isLocked","wrap_classList","opts","empty_option","AddSelected","has_selected","reuse_opt","setTextboxValue","context","rect","top","left","selection","tail","rm_items","rm_item","adjacent","new_pos","revertSettings","templateName","when","method","new_fn","orig_method","result_new","caret_position","dropdown_input","div","orig_onBlur","no_backspace_delete","orig_deleteSelection","remove_button","userOptions","orig_render_item","close_button","restore_on_backspace","allowExitFrom","exitNotification","exitLink","defaultExitUrl","defaultExitLinkText","signOutPath","exitLinkText","openExitNotification","url","handleClicks","link","signOutLink","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","getter","exports","definition","prop","getCoordinateInputName","coordinate","$input","inputName","subNameMatch","attachGeocoding","attachOptions","inputIdParts","idPrefix","latitudeName","longitudeName","config","geocoded","createCoordinateFields","$latitude","$longitude","clearCoordinateFields","setCoordinates","coordinates2","_ev","coordinates","$map","$addressInputField","markerAddedAnnouncement","latFieldName","longFieldName","ctrl","ev","__defProp","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","container","tmName","tmItems","tmNoResults"],"sourceRoot":""}