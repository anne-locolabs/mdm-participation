{"version":3,"file":"js/9582-182a08fb9d7aceec86f2.chunk.js","mappings":"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","sources":["webpack://decidim-development-app/./node_modules/codemirror/addon/fold/brace-fold.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction bracketFolding(pairs) {\n  return function(cm, start) {\n    var line = start.line, lineText = cm.getLine(line);\n\n    function findOpening(pair) {\n      var tokenType;\n      for (var at = start.ch, pass = 0;;) {\n        var found = at <= 0 ? -1 : lineText.lastIndexOf(pair[0], at - 1);\n        if (found == -1) {\n          if (pass == 1) break;\n          pass = 1;\n          at = lineText.length;\n          continue;\n        }\n        if (pass == 1 && found < start.ch) break;\n        tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));\n        if (!/^(comment|string)/.test(tokenType)) return {ch: found + 1, tokenType: tokenType, pair: pair};\n        at = found - 1;\n      }\n    }\n\n    function findRange(found) {\n      var count = 1, lastLine = cm.lastLine(), end, startCh = found.ch, endCh\n      outer: for (var i = line; i <= lastLine; ++i) {\n        var text = cm.getLine(i), pos = i == line ? startCh : 0;\n        for (;;) {\n          var nextOpen = text.indexOf(found.pair[0], pos), nextClose = text.indexOf(found.pair[1], pos);\n          if (nextOpen < 0) nextOpen = text.length;\n          if (nextClose < 0) nextClose = text.length;\n          pos = Math.min(nextOpen, nextClose);\n          if (pos == text.length) break;\n          if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == found.tokenType) {\n            if (pos == nextOpen) ++count;\n            else if (!--count) { end = i; endCh = pos; break outer; }\n          }\n          ++pos;\n        }\n      }\n\n      if (end == null || line == end) return null\n      return {from: CodeMirror.Pos(line, startCh),\n              to: CodeMirror.Pos(end, endCh)};\n    }\n\n    var found = []\n    for (var i = 0; i < pairs.length; i++) {\n      var open = findOpening(pairs[i])\n      if (open) found.push(open)\n    }\n    found.sort(function(a, b) { return a.ch - b.ch })\n    for (var i = 0; i < found.length; i++) {\n      var range = findRange(found[i])\n      if (range) return range\n    }\n    return null\n  }\n}\n\nCodeMirror.registerHelper(\"fold\", \"brace\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"]]));\n\nCodeMirror.registerHelper(\"fold\", \"brace-paren\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]]));\n\nCodeMirror.registerHelper(\"fold\", \"import\", function(cm, start) {\n  function hasImport(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type != \"keyword\" || start.string != \"import\") return null;\n    // Now find closing semicolon, return its position\n    for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n      var text = cm.getLine(i), semi = text.indexOf(\";\");\n      if (semi != -1) return {startCh: start.end, end: CodeMirror.Pos(i, semi)};\n    }\n  }\n\n  var startLine = start.line, has = hasImport(startLine), prev;\n  if (!has || hasImport(startLine - 1) || ((prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1))\n    return null;\n  for (var end = has.end;;) {\n    var next = hasImport(end.line + 1);\n    if (next == null) break;\n    end = next.end;\n  }\n  return {from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)), to: end};\n});\n\nCodeMirror.registerHelper(\"fold\", \"include\", function(cm, start) {\n  function hasInclude(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type == \"meta\" && start.string.slice(0, 8) == \"#include\") return start.start + 8;\n  }\n\n  var startLine = start.line, has = hasInclude(startLine);\n  if (has == null || hasInclude(startLine - 1) != null) return null;\n  for (var end = startLine;;) {\n    var next = hasInclude(end + 1);\n    if (next == null) break;\n    ++end;\n  }\n  return {from: CodeMirror.Pos(startLine, has + 1),\n          to: cm.clipPos(CodeMirror.Pos(end))};\n});\n\n});\n"],"names":["mod","CodeMirror","bracketFolding","pairs","cm","start","line","lineText","findOpening","pair","tokenType","at","pass","found","findRange","count","lastLine","end","startCh","endCh","outer","i","text","pos","nextOpen","nextClose","open","a","b","range","hasImport","e","semi","startLine","has","prev","next","hasInclude"],"sourceRoot":""}