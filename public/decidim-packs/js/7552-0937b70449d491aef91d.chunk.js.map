{"version":3,"file":"js/7552-0937b70449d491aef91d.chunk.js","mappings":"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","sources":["webpack://decidim-development-app/./node_modules/codemirror/addon/search/searchcursor.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n"],"names":["mod","CodeMirror","Pos","regexpFlags","regexp","flags","ensureFlags","current","target","maybeMultiline","searchRegexpForward","doc","start","line","ch","last","string","match","searchRegexpForwardMultiline","chunk","i","curLine","before","inside","startLine","startCh","lastMatchIn","endMargin","from","newMatch","end","searchRegexpBackward","first","searchRegexpBackwardMultiline","chunkSize","doFold","noFold","str","adjustPos","orig","folded","pos","foldFunc","min","max","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","lastLine","searchStringBackward","top","topString","SearchCursor","options","reverse","head","result","newText","origin","ranges","cur"],"sourceRoot":""}